// Generated from /nix/store/jgp6swi77v44y79943d50yv2jjp33qz3-source/network-schema/shop_events.proto at version v2 (70b21528139248d7f10f266a048a1aaf1a704db5)

// SPDX-FileCopyrightText: 2024 Mass Labs
//
// SPDX-License-Identifier: GPL-3.0-or-later
// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: shop_events.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// First genisis message of a shop.
// Has to be the first message that is written and can only be written once.
// Use UpdateShopManifest to make changes.
type ShopManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The event_id is a unique identifier for an event.
	// Currently it's 32 bytes of random data.
	// It also functions as a nonce for The events signature.
	// The global identifier of an Item should also include the shop_token_id.
	// hash(shop_token_id:signature) might suffice then with a smaller nonce.
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// The NFT Token ID used in ShopReg.registerShop().
	// Checkout will ownerOf() this to determine the addr for PurchaseFactory.
	ShopTokenId []byte `protobuf:"bytes,2,opt,name=shop_token_id,json=shopTokenId,proto3" json:"shop_token_id,omitempty"`
	// the system tag used to list active items
	PublishedTagId []byte `protobuf:"bytes,3,opt,name=published_tag_id,json=publishedTagId,proto3" json:"published_tag_id,omitempty"`
	// shop metadata
	Name              string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description       string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	ProfilePictureUrl string `protobuf:"bytes,6,opt,name=profile_picture_url,json=profilePictureUrl,proto3" json:"profile_picture_url,omitempty"`
	Domain            string `protobuf:"bytes,7,opt,name=domain,proto3" json:"domain,omitempty"` // Website URL of the shop
}

func (x *ShopManifest) Reset() {
	*x = ShopManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopManifest) ProtoMessage() {}

func (x *ShopManifest) ProtoReflect() protoreflect.Message {
	mi := &file_shop_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopManifest.ProtoReflect.Descriptor instead.
func (*ShopManifest) Descriptor() ([]byte, []int) {
	return file_shop_events_proto_rawDescGZIP(), []int{0}
}

func (x *ShopManifest) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *ShopManifest) GetShopTokenId() []byte {
	if x != nil {
		return x.ShopTokenId
	}
	return nil
}

func (x *ShopManifest) GetPublishedTagId() []byte {
	if x != nil {
		return x.PublishedTagId
	}
	return nil
}

func (x *ShopManifest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShopManifest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ShopManifest) GetProfilePictureUrl() string {
	if x != nil {
		return x.ProfilePictureUrl
	}
	return ""
}

func (x *ShopManifest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// Used to update the shop manifest.
// The Field enum determines the field to be updated and the value to be used.
type UpdateShopManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See ShopManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// shop metadata
	Name                   *string                   `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description            *string                   `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	ProfilePictureUrl      *string                   `protobuf:"bytes,4,opt,name=profile_picture_url,json=profilePictureUrl,proto3,oneof" json:"profile_picture_url,omitempty"`
	Domain                 *string                   `protobuf:"bytes,5,opt,name=domain,proto3,oneof" json:"domain,omitempty"`
	PublishedTagId         []byte                    `protobuf:"bytes,6,opt,name=published_tag_id,json=publishedTagId,proto3,oneof" json:"published_tag_id,omitempty"`
	AddPayee               *UpdateShopManifest_Payee `protobuf:"bytes,7,opt,name=add_payee,json=addPayee,proto3,oneof" json:"add_payee,omitempty"`
	RemovePayee            *UpdateShopManifest_Payee `protobuf:"bytes,8,opt,name=remove_payee,json=removePayee,proto3,oneof" json:"remove_payee,omitempty"`
	AddAcceptedCurrency    *ShopCurrency             `protobuf:"bytes,9,opt,name=add_accepted_currency,json=addAcceptedCurrency,proto3,oneof" json:"add_accepted_currency,omitempty"`
	RemoveAcceptedCurrency *ShopCurrency             `protobuf:"bytes,10,opt,name=remove_accepted_currency,json=removeAcceptedCurrency,proto3,oneof" json:"remove_accepted_currency,omitempty"`
	SetBaseCurrency        *ShopCurrency             `protobuf:"bytes,11,opt,name=set_base_currency,json=setBaseCurrency,proto3,oneof" json:"set_base_currency,omitempty"`
}

func (x *UpdateShopManifest) Reset() {
	*x = UpdateShopManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShopManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShopManifest) ProtoMessage() {}

func (x *UpdateShopManifest) ProtoReflect() protoreflect.Message {
	mi := &file_shop_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShopManifest.ProtoReflect.Descriptor instead.
func (*UpdateShopManifest) Descriptor() ([]byte, []int) {
	return file_shop_events_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateShopManifest) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *UpdateShopManifest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateShopManifest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateShopManifest) GetProfilePictureUrl() string {
	if x != nil && x.ProfilePictureUrl != nil {
		return *x.ProfilePictureUrl
	}
	return ""
}

func (x *UpdateShopManifest) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

func (x *UpdateShopManifest) GetPublishedTagId() []byte {
	if x != nil {
		return x.PublishedTagId
	}
	return nil
}

func (x *UpdateShopManifest) GetAddPayee() *UpdateShopManifest_Payee {
	if x != nil {
		return x.AddPayee
	}
	return nil
}

func (x *UpdateShopManifest) GetRemovePayee() *UpdateShopManifest_Payee {
	if x != nil {
		return x.RemovePayee
	}
	return nil
}

func (x *UpdateShopManifest) GetAddAcceptedCurrency() *ShopCurrency {
	if x != nil {
		return x.AddAcceptedCurrency
	}
	return nil
}

func (x *UpdateShopManifest) GetRemoveAcceptedCurrency() *ShopCurrency {
	if x != nil {
		return x.RemoveAcceptedCurrency
	}
	return nil
}

func (x *UpdateShopManifest) GetSetBaseCurrency() *ShopCurrency {
	if x != nil {
		return x.SetBaseCurrency
	}
	return nil
}

// Creates an item in the shop.
type CreateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See ShopManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// decimal number as a string.
	// numbers need to be always formatted to 2 decimal places.
	// the demcimal place must use a dot ('.') as the separator.
	Price string `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	// should be valid JSON
	// TODO: make a json schmea with minimal/required fields
	Metadata []byte `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *CreateItem) Reset() {
	*x = CreateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItem) ProtoMessage() {}

func (x *CreateItem) ProtoReflect() protoreflect.Message {
	mi := &file_shop_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItem.ProtoReflect.Descriptor instead.
func (*CreateItem) Descriptor() ([]byte, []int) {
	return file_shop_events_proto_rawDescGZIP(), []int{2}
}

func (x *CreateItem) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *CreateItem) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CreateItem) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// UpdateItem changes the price or metadata of an item.
// Follows the same pattern as UpdateManifest.
type UpdateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See ShopManifest for details
	EventId  []byte  `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	ItemId   []byte  `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"` // the event_id of the CreateItem event
	Price    *string `protobuf:"bytes,3,opt,name=price,proto3,oneof" json:"price,omitempty"`
	Metadata []byte  `protobuf:"bytes,4,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
}

func (x *UpdateItem) Reset() {
	*x = UpdateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItem) ProtoMessage() {}

func (x *UpdateItem) ProtoReflect() protoreflect.Message {
	mi := &file_shop_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItem.ProtoReflect.Descriptor instead.
func (*UpdateItem) Descriptor() ([]byte, []int) {
	return file_shop_events_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateItem) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *UpdateItem) GetItemId() []byte {
	if x != nil {
		return x.ItemId
	}
	return nil
}

func (x *UpdateItem) GetPrice() string {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return ""
}

func (x *UpdateItem) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Creates a tag in the shop.
// These can be used to group items into categories.
// There are also a couple of system-level tags, like published.
// Thse are used to filter items in the shop.
type CreateTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See ShopManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateTag) Reset() {
	*x = CreateTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTag) ProtoMessage() {}

func (x *CreateTag) ProtoReflect() protoreflect.Message {
	mi := &file_shop_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTag.ProtoReflect.Descriptor instead.
func (*CreateTag) Descriptor() ([]byte, []int) {
	return file_shop_events_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTag) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *CreateTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See ShopManifest for details
	EventId      []byte  `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TagId        []byte  `protobuf:"bytes,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	AddItemId    []byte  `protobuf:"bytes,3,opt,name=add_item_id,json=addItemId,proto3,oneof" json:"add_item_id,omitempty"`
	RemoveItemId []byte  `protobuf:"bytes,4,opt,name=remove_item_id,json=removeItemId,proto3,oneof" json:"remove_item_id,omitempty"`
	Delete       *bool   `protobuf:"varint,5,opt,name=delete,proto3,oneof" json:"delete,omitempty"`
	Rename       *string `protobuf:"bytes,6,opt,name=rename,proto3,oneof" json:"rename,omitempty"`
}

func (x *UpdateTag) Reset() {
	*x = UpdateTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTag) ProtoMessage() {}

func (x *UpdateTag) ProtoReflect() protoreflect.Message {
	mi := &file_shop_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTag.ProtoReflect.Descriptor instead.
func (*UpdateTag) Descriptor() ([]byte, []int) {
	return file_shop_events_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTag) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *UpdateTag) GetTagId() []byte {
	if x != nil {
		return x.TagId
	}
	return nil
}

func (x *UpdateTag) GetAddItemId() []byte {
	if x != nil {
		return x.AddItemId
	}
	return nil
}

func (x *UpdateTag) GetRemoveItemId() []byte {
	if x != nil {
		return x.RemoveItemId
	}
	return nil
}

func (x *UpdateTag) GetDelete() bool {
	if x != nil && x.Delete != nil {
		return *x.Delete
	}
	return false
}

func (x *UpdateTag) GetRename() string {
	if x != nil && x.Rename != nil {
		return *x.Rename
	}
	return ""
}

// ChangeStock is used to update the stock of on or more items.
// Created by the relay after an order has been paied for.
type ChangeStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See ShopManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// length needs to match the length of the diff field
	ItemIds [][]byte `protobuf:"bytes,2,rep,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
	Diffs   []int32  `protobuf:"zigzag32,3,rep,packed,name=diffs,proto3" json:"diffs,omitempty"`
	// (optional) only set by the relay.
	// signals payment completion after a CommitOrderRequest
	OrderId []byte `protobuf:"bytes,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	TxHash  []byte `protobuf:"bytes,5,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *ChangeStock) Reset() {
	*x = ChangeStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeStock) ProtoMessage() {}

func (x *ChangeStock) ProtoReflect() protoreflect.Message {
	mi := &file_shop_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeStock.ProtoReflect.Descriptor instead.
func (*ChangeStock) Descriptor() ([]byte, []int) {
	return file_shop_events_proto_rawDescGZIP(), []int{6}
}

func (x *ChangeStock) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *ChangeStock) GetItemIds() [][]byte {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

func (x *ChangeStock) GetDiffs() []int32 {
	if x != nil {
		return x.Diffs
	}
	return nil
}

func (x *ChangeStock) GetOrderId() []byte {
	if x != nil {
		return x.OrderId
	}
	return nil
}

func (x *ChangeStock) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

// created by the relay when a user enrolls a key card
type NewKeyCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See ShopManifest for details
	EventId        []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	UserWalletAddr []byte `protobuf:"bytes,2,opt,name=user_wallet_addr,json=userWalletAddr,proto3" json:"user_wallet_addr,omitempty"`
	CardPublicKey  []byte `protobuf:"bytes,3,opt,name=card_public_key,json=cardPublicKey,proto3" json:"card_public_key,omitempty"`
	IsGuest        bool   `protobuf:"varint,4,opt,name=is_guest,json=isGuest,proto3" json:"is_guest,omitempty"`
}

func (x *NewKeyCard) Reset() {
	*x = NewKeyCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewKeyCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewKeyCard) ProtoMessage() {}

func (x *NewKeyCard) ProtoReflect() protoreflect.Message {
	mi := &file_shop_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewKeyCard.ProtoReflect.Descriptor instead.
func (*NewKeyCard) Descriptor() ([]byte, []int) {
	return file_shop_events_proto_rawDescGZIP(), []int{7}
}

func (x *NewKeyCard) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *NewKeyCard) GetUserWalletAddr() []byte {
	if x != nil {
		return x.UserWalletAddr
	}
	return nil
}

func (x *NewKeyCard) GetCardPublicKey() []byte {
	if x != nil {
		return x.CardPublicKey
	}
	return nil
}

func (x *NewKeyCard) GetIsGuest() bool {
	if x != nil {
		return x.IsGuest
	}
	return false
}

// CreateOrder is used to create a new order.
type CreateOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See ShopManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *CreateOrder) Reset() {
	*x = CreateOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrder) ProtoMessage() {}

func (x *CreateOrder) ProtoReflect() protoreflect.Message {
	mi := &file_shop_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrder.ProtoReflect.Descriptor instead.
func (*CreateOrder) Descriptor() ([]byte, []int) {
	return file_shop_events_proto_rawDescGZIP(), []int{8}
}

func (x *CreateOrder) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

type UpdateOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See ShopManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	OrderId []byte `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// Types that are assignable to Action:
	//
	//	*UpdateOrder_ChangeItems_
	//	*UpdateOrder_ItemsFinalized_
	//	*UpdateOrder_OrderCanceled_
	Action isUpdateOrder_Action `protobuf_oneof:"action"`
}

func (x *UpdateOrder) Reset() {
	*x = UpdateOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrder) ProtoMessage() {}

func (x *UpdateOrder) ProtoReflect() protoreflect.Message {
	mi := &file_shop_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrder.ProtoReflect.Descriptor instead.
func (*UpdateOrder) Descriptor() ([]byte, []int) {
	return file_shop_events_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateOrder) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *UpdateOrder) GetOrderId() []byte {
	if x != nil {
		return x.OrderId
	}
	return nil
}

func (m *UpdateOrder) GetAction() isUpdateOrder_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *UpdateOrder) GetChangeItems() *UpdateOrder_ChangeItems {
	if x, ok := x.GetAction().(*UpdateOrder_ChangeItems_); ok {
		return x.ChangeItems
	}
	return nil
}

func (x *UpdateOrder) GetItemsFinalized() *UpdateOrder_ItemsFinalized {
	if x, ok := x.GetAction().(*UpdateOrder_ItemsFinalized_); ok {
		return x.ItemsFinalized
	}
	return nil
}

func (x *UpdateOrder) GetOrderCanceled() *UpdateOrder_OrderCanceled {
	if x, ok := x.GetAction().(*UpdateOrder_OrderCanceled_); ok {
		return x.OrderCanceled
	}
	return nil
}

type isUpdateOrder_Action interface {
	isUpdateOrder_Action()
}

type UpdateOrder_ChangeItems_ struct {
	ChangeItems *UpdateOrder_ChangeItems `protobuf:"bytes,3,opt,name=change_items,json=changeItems,proto3,oneof"`
}

type UpdateOrder_ItemsFinalized_ struct {
	ItemsFinalized *UpdateOrder_ItemsFinalized `protobuf:"bytes,4,opt,name=items_finalized,json=itemsFinalized,proto3,oneof"`
}

type UpdateOrder_OrderCanceled_ struct {
	OrderCanceled *UpdateOrder_OrderCanceled `protobuf:"bytes,5,opt,name=order_canceled,json=orderCanceled,proto3,oneof"`
}

func (*UpdateOrder_ChangeItems_) isUpdateOrder_Action() {}

func (*UpdateOrder_ItemsFinalized_) isUpdateOrder_Action() {}

func (*UpdateOrder_OrderCanceled_) isUpdateOrder_Action() {}

// ShopEvent is the transport wrapper for a single event in a shop.
//
// For signatures we use https://eips.ethereum.org/EIPS/eip-712.
// The structured data definition are specified in `typedData.json`.
// The KeyCard keypair is used to sign or verify the data.
// The Set of all valid keys is all NewKeyCard events
// plus the Relays assigned on the ShopReg smart contract.
//
// Special care must be taken for Events with optional and union fields.
// Specifically these are `UpdateManifest`, `UpdateItem` and `ChangeStock`.
// Some implementations of `eth_signTypedData` are fine with `null` fields,
// while others aren't.
// Therefore, the structured data specification
// needs to be pruned from fields that are not set.
type ShopEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Union:
	//
	//	*ShopEvent_ShopManifest
	//	*ShopEvent_UpdateShopManifest
	//	*ShopEvent_CreateItem
	//	*ShopEvent_UpdateItem
	//	*ShopEvent_CreateTag
	//	*ShopEvent_UpdateTag
	//	*ShopEvent_CreateOrder
	//	*ShopEvent_UpdateOrder
	//	*ShopEvent_ChangeStock
	//	*ShopEvent_NewKeyCard
	Union isShopEvent_Union `protobuf_oneof:"union"`
}

func (x *ShopEvent) Reset() {
	*x = ShopEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopEvent) ProtoMessage() {}

func (x *ShopEvent) ProtoReflect() protoreflect.Message {
	mi := &file_shop_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopEvent.ProtoReflect.Descriptor instead.
func (*ShopEvent) Descriptor() ([]byte, []int) {
	return file_shop_events_proto_rawDescGZIP(), []int{10}
}

func (m *ShopEvent) GetUnion() isShopEvent_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *ShopEvent) GetShopManifest() *ShopManifest {
	if x, ok := x.GetUnion().(*ShopEvent_ShopManifest); ok {
		return x.ShopManifest
	}
	return nil
}

func (x *ShopEvent) GetUpdateShopManifest() *UpdateShopManifest {
	if x, ok := x.GetUnion().(*ShopEvent_UpdateShopManifest); ok {
		return x.UpdateShopManifest
	}
	return nil
}

func (x *ShopEvent) GetCreateItem() *CreateItem {
	if x, ok := x.GetUnion().(*ShopEvent_CreateItem); ok {
		return x.CreateItem
	}
	return nil
}

func (x *ShopEvent) GetUpdateItem() *UpdateItem {
	if x, ok := x.GetUnion().(*ShopEvent_UpdateItem); ok {
		return x.UpdateItem
	}
	return nil
}

func (x *ShopEvent) GetCreateTag() *CreateTag {
	if x, ok := x.GetUnion().(*ShopEvent_CreateTag); ok {
		return x.CreateTag
	}
	return nil
}

func (x *ShopEvent) GetUpdateTag() *UpdateTag {
	if x, ok := x.GetUnion().(*ShopEvent_UpdateTag); ok {
		return x.UpdateTag
	}
	return nil
}

func (x *ShopEvent) GetCreateOrder() *CreateOrder {
	if x, ok := x.GetUnion().(*ShopEvent_CreateOrder); ok {
		return x.CreateOrder
	}
	return nil
}

func (x *ShopEvent) GetUpdateOrder() *UpdateOrder {
	if x, ok := x.GetUnion().(*ShopEvent_UpdateOrder); ok {
		return x.UpdateOrder
	}
	return nil
}

func (x *ShopEvent) GetChangeStock() *ChangeStock {
	if x, ok := x.GetUnion().(*ShopEvent_ChangeStock); ok {
		return x.ChangeStock
	}
	return nil
}

func (x *ShopEvent) GetNewKeyCard() *NewKeyCard {
	if x, ok := x.GetUnion().(*ShopEvent_NewKeyCard); ok {
		return x.NewKeyCard
	}
	return nil
}

type isShopEvent_Union interface {
	isShopEvent_Union()
}

type ShopEvent_ShopManifest struct {
	ShopManifest *ShopManifest `protobuf:"bytes,2,opt,name=shop_manifest,json=shopManifest,proto3,oneof"`
}

type ShopEvent_UpdateShopManifest struct {
	UpdateShopManifest *UpdateShopManifest `protobuf:"bytes,3,opt,name=update_shop_manifest,json=updateShopManifest,proto3,oneof"`
}

type ShopEvent_CreateItem struct {
	CreateItem *CreateItem `protobuf:"bytes,4,opt,name=create_item,json=createItem,proto3,oneof"`
}

type ShopEvent_UpdateItem struct {
	UpdateItem *UpdateItem `protobuf:"bytes,5,opt,name=update_item,json=updateItem,proto3,oneof"`
}

type ShopEvent_CreateTag struct {
	CreateTag *CreateTag `protobuf:"bytes,6,opt,name=create_tag,json=createTag,proto3,oneof"`
}

type ShopEvent_UpdateTag struct {
	UpdateTag *UpdateTag `protobuf:"bytes,7,opt,name=update_tag,json=updateTag,proto3,oneof"`
}

type ShopEvent_CreateOrder struct {
	CreateOrder *CreateOrder `protobuf:"bytes,8,opt,name=create_order,json=createOrder,proto3,oneof"`
}

type ShopEvent_UpdateOrder struct {
	UpdateOrder *UpdateOrder `protobuf:"bytes,9,opt,name=update_order,json=updateOrder,proto3,oneof"`
}

type ShopEvent_ChangeStock struct {
	ChangeStock *ChangeStock `protobuf:"bytes,12,opt,name=change_stock,json=changeStock,proto3,oneof"`
}

type ShopEvent_NewKeyCard struct {
	NewKeyCard *NewKeyCard `protobuf:"bytes,13,opt,name=new_key_card,json=newKeyCard,proto3,oneof"`
}

func (*ShopEvent_ShopManifest) isShopEvent_Union() {}

func (*ShopEvent_UpdateShopManifest) isShopEvent_Union() {}

func (*ShopEvent_CreateItem) isShopEvent_Union() {}

func (*ShopEvent_UpdateItem) isShopEvent_Union() {}

func (*ShopEvent_CreateTag) isShopEvent_Union() {}

func (*ShopEvent_UpdateTag) isShopEvent_Union() {}

func (*ShopEvent_CreateOrder) isShopEvent_Union() {}

func (*ShopEvent_UpdateOrder) isShopEvent_Union() {}

func (*ShopEvent_ChangeStock) isShopEvent_Union() {}

func (*ShopEvent_NewKeyCard) isShopEvent_Union() {}

type UpdateShopManifest_Payee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // user handle, like "escrow" or "direct", used during checkout
	Addr    []byte `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	ChainId uint64 `protobuf:"varint,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// controls weather the payment is transfered via forwarded via pay() method or not.
	// see https://github.com/masslbs/contracts/blob/377aba24796e029945696350db581ec1f65da657/src/IPayments.sol#L90-L95.
	CallAsContract bool `protobuf:"varint,4,opt,name=call_as_contract,json=callAsContract,proto3" json:"call_as_contract,omitempty"`
}

func (x *UpdateShopManifest_Payee) Reset() {
	*x = UpdateShopManifest_Payee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateShopManifest_Payee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShopManifest_Payee) ProtoMessage() {}

func (x *UpdateShopManifest_Payee) ProtoReflect() protoreflect.Message {
	mi := &file_shop_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShopManifest_Payee.ProtoReflect.Descriptor instead.
func (*UpdateShopManifest_Payee) Descriptor() ([]byte, []int) {
	return file_shop_events_proto_rawDescGZIP(), []int{1, 0}
}

func (x *UpdateShopManifest_Payee) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateShopManifest_Payee) GetAddr() []byte {
	if x != nil {
		return x.Addr
	}
	return nil
}

func (x *UpdateShopManifest_Payee) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *UpdateShopManifest_Payee) GetCallAsContract() bool {
	if x != nil {
		return x.CallAsContract
	}
	return false
}

// ChangeItems is used to add or remove items from an order.
// Only valid before the items were finalized.
type UpdateOrder_ChangeItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId   []byte `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Quantity int32  `protobuf:"zigzag32,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *UpdateOrder_ChangeItems) Reset() {
	*x = UpdateOrder_ChangeItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_events_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrder_ChangeItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrder_ChangeItems) ProtoMessage() {}

func (x *UpdateOrder_ChangeItems) ProtoReflect() protoreflect.Message {
	mi := &file_shop_events_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrder_ChangeItems.ProtoReflect.Descriptor instead.
func (*UpdateOrder_ChangeItems) Descriptor() ([]byte, []int) {
	return file_shop_events_proto_rawDescGZIP(), []int{9, 0}
}

func (x *UpdateOrder_ChangeItems) GetItemId() []byte {
	if x != nil {
		return x.ItemId
	}
	return nil
}

func (x *UpdateOrder_ChangeItems) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Created by the relay after a CommitOrderRequest.
// It signals that an order is about to be payed,
// and can not be changed anymore.
type UpdateOrder_ItemsFinalized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// for verification. Compare against getPaymentId(PaymentReq)
	PaymentId []byte `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	SubTotal  string `protobuf:"bytes,2,opt,name=sub_total,json=subTotal,proto3" json:"sub_total,omitempty"`
	SalesTax  string `protobuf:"bytes,3,opt,name=sales_tax,json=salesTax,proto3" json:"sales_tax,omitempty"`
	Total     string `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"` // = subtotal + sales_tax
	// PaymentRequest fields that are not obvious to the caller
	Ttl               string `protobuf:"bytes,5,opt,name=ttl,proto3" json:"ttl,omitempty"`
	OrderHash         []byte `protobuf:"bytes,6,opt,name=order_hash,json=orderHash,proto3" json:"order_hash,omitempty"`
	CurrencyAddr      []byte `protobuf:"bytes,7,opt,name=currency_addr,json=currencyAddr,proto3" json:"currency_addr,omitempty"`
	TotalInCrypto     string `protobuf:"bytes,8,opt,name=total_in_crypto,json=totalInCrypto,proto3" json:"total_in_crypto,omitempty"` // "amount" (bigint as string)
	PayeeAddr         []byte `protobuf:"bytes,9,opt,name=payee_addr,json=payeeAddr,proto3" json:"payee_addr,omitempty"`
	IsPaymentEndpoint bool   `protobuf:"varint,10,opt,name=is_payment_endpoint,json=isPaymentEndpoint,proto3" json:"is_payment_endpoint,omitempty"`
	ShopSignature     []byte `protobuf:"bytes,11,opt,name=shop_signature,json=shopSignature,proto3" json:"shop_signature,omitempty"` // end of PaymentRequest data
}

func (x *UpdateOrder_ItemsFinalized) Reset() {
	*x = UpdateOrder_ItemsFinalized{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_events_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrder_ItemsFinalized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrder_ItemsFinalized) ProtoMessage() {}

func (x *UpdateOrder_ItemsFinalized) ProtoReflect() protoreflect.Message {
	mi := &file_shop_events_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrder_ItemsFinalized.ProtoReflect.Descriptor instead.
func (*UpdateOrder_ItemsFinalized) Descriptor() ([]byte, []int) {
	return file_shop_events_proto_rawDescGZIP(), []int{9, 1}
}

func (x *UpdateOrder_ItemsFinalized) GetPaymentId() []byte {
	if x != nil {
		return x.PaymentId
	}
	return nil
}

func (x *UpdateOrder_ItemsFinalized) GetSubTotal() string {
	if x != nil {
		return x.SubTotal
	}
	return ""
}

func (x *UpdateOrder_ItemsFinalized) GetSalesTax() string {
	if x != nil {
		return x.SalesTax
	}
	return ""
}

func (x *UpdateOrder_ItemsFinalized) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *UpdateOrder_ItemsFinalized) GetTtl() string {
	if x != nil {
		return x.Ttl
	}
	return ""
}

func (x *UpdateOrder_ItemsFinalized) GetOrderHash() []byte {
	if x != nil {
		return x.OrderHash
	}
	return nil
}

func (x *UpdateOrder_ItemsFinalized) GetCurrencyAddr() []byte {
	if x != nil {
		return x.CurrencyAddr
	}
	return nil
}

func (x *UpdateOrder_ItemsFinalized) GetTotalInCrypto() string {
	if x != nil {
		return x.TotalInCrypto
	}
	return ""
}

func (x *UpdateOrder_ItemsFinalized) GetPayeeAddr() []byte {
	if x != nil {
		return x.PayeeAddr
	}
	return nil
}

func (x *UpdateOrder_ItemsFinalized) GetIsPaymentEndpoint() bool {
	if x != nil {
		return x.IsPaymentEndpoint
	}
	return false
}

func (x *UpdateOrder_ItemsFinalized) GetShopSignature() []byte {
	if x != nil {
		return x.ShopSignature
	}
	return nil
}

// Either created by a relay for an order that haven't been payed in time.
// Or by a clerk, for eg. when the customer steps back from the purchase.
// This frees up the items locked up in the finalized order.
type UpdateOrder_OrderCanceled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *UpdateOrder_OrderCanceled) Reset() {
	*x = UpdateOrder_OrderCanceled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shop_events_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrder_OrderCanceled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrder_OrderCanceled) ProtoMessage() {}

func (x *UpdateOrder_OrderCanceled) ProtoReflect() protoreflect.Message {
	mi := &file_shop_events_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrder_OrderCanceled.ProtoReflect.Descriptor instead.
func (*UpdateOrder_OrderCanceled) Descriptor() ([]byte, []int) {
	return file_shop_events_proto_rawDescGZIP(), []int{9, 2}
}

func (x *UpdateOrder_OrderCanceled) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_shop_events_proto protoreflect.FileDescriptor

var file_shop_events_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x1a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x01, 0x0a,
	0x0c, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x70,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0b, 0x73, 0x68, 0x6f, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x54, 0x61, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x22, 0xb5, 0x07, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x68, 0x6f, 0x70, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x69,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x04, 0x52, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54,
	0x61, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x5f, 0x70,
	0x61, 0x79, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x68, 0x6f, 0x70, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x65,
	0x65, 0x48, 0x05, 0x52, 0x08, 0x61, 0x64, 0x64, 0x50, 0x61, 0x79, 0x65, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x4d, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x65, 0x65, 0x48, 0x06, 0x52,
	0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x79, 0x65, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x52, 0x0a, 0x15, 0x61, 0x64, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x53, 0x68, 0x6f,
	0x70, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x48, 0x07, 0x52, 0x13, 0x61, 0x64, 0x64,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x58, 0x0a, 0x18, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x48, 0x08, 0x52, 0x16, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a,
	0x11, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x48, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x88, 0x01, 0x01, 0x1a, 0x74, 0x0a, 0x05, 0x50, 0x61, 0x79,
	0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x73,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x41, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x65, 0x65, 0x42,
	0x18, 0x0a, 0x16, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64,
	0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x59, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x93, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3a, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x80, 0x02, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0b, 0x61, 0x64, 0x64,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x29,
	0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x06, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x06, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x01, 0x0a,
	0x0b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x69, 0x66, 0x66, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x11, 0x52, 0x05, 0x64, 0x69, 0x66, 0x66, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x94, 0x01, 0x0a,
	0x0a, 0x4e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x43, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x67,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa6, 0x06,
	0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x48,
	0x00, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x52,
	0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x48, 0x00, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x12, 0x4f, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x65, 0x64, 0x1a, 0x42, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0xf3, 0x02, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f,
	0x74, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x54, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x41, 0x64, 0x64, 0x72, 0x12,
	0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49,
	0x6e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x65,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x79,
	0x65, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d,
	0x73, 0x68, 0x6f, 0x70, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x2d, 0x0a,
	0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8f, 0x05, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x70, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x70, 0x4d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x4d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x68, 0x6f, 0x70, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x37, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x48,
	0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x37, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x48, 0x00, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x12, 0x3b, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x43, 0x61, 0x72,
	0x64, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x43, 0x61, 0x72, 0x64, 0x42,
	0x07, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shop_events_proto_rawDescOnce sync.Once
	file_shop_events_proto_rawDescData = file_shop_events_proto_rawDesc
)

func file_shop_events_proto_rawDescGZIP() []byte {
	file_shop_events_proto_rawDescOnce.Do(func() {
		file_shop_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_shop_events_proto_rawDescData)
	})
	return file_shop_events_proto_rawDescData
}

var file_shop_events_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_shop_events_proto_goTypes = []interface{}{
	(*ShopManifest)(nil),               // 0: market.mass.ShopManifest
	(*UpdateShopManifest)(nil),         // 1: market.mass.UpdateShopManifest
	(*CreateItem)(nil),                 // 2: market.mass.CreateItem
	(*UpdateItem)(nil),                 // 3: market.mass.UpdateItem
	(*CreateTag)(nil),                  // 4: market.mass.CreateTag
	(*UpdateTag)(nil),                  // 5: market.mass.UpdateTag
	(*ChangeStock)(nil),                // 6: market.mass.ChangeStock
	(*NewKeyCard)(nil),                 // 7: market.mass.NewKeyCard
	(*CreateOrder)(nil),                // 8: market.mass.CreateOrder
	(*UpdateOrder)(nil),                // 9: market.mass.UpdateOrder
	(*ShopEvent)(nil),                  // 10: market.mass.ShopEvent
	(*UpdateShopManifest_Payee)(nil),   // 11: market.mass.UpdateShopManifest.Payee
	(*UpdateOrder_ChangeItems)(nil),    // 12: market.mass.UpdateOrder.ChangeItems
	(*UpdateOrder_ItemsFinalized)(nil), // 13: market.mass.UpdateOrder.ItemsFinalized
	(*UpdateOrder_OrderCanceled)(nil),  // 14: market.mass.UpdateOrder.OrderCanceled
	(*ShopCurrency)(nil),               // 15: market.mass.ShopCurrency
}
var file_shop_events_proto_depIdxs = []int32{
	11, // 0: market.mass.UpdateShopManifest.add_payee:type_name -> market.mass.UpdateShopManifest.Payee
	11, // 1: market.mass.UpdateShopManifest.remove_payee:type_name -> market.mass.UpdateShopManifest.Payee
	15, // 2: market.mass.UpdateShopManifest.add_accepted_currency:type_name -> market.mass.ShopCurrency
	15, // 3: market.mass.UpdateShopManifest.remove_accepted_currency:type_name -> market.mass.ShopCurrency
	15, // 4: market.mass.UpdateShopManifest.set_base_currency:type_name -> market.mass.ShopCurrency
	12, // 5: market.mass.UpdateOrder.change_items:type_name -> market.mass.UpdateOrder.ChangeItems
	13, // 6: market.mass.UpdateOrder.items_finalized:type_name -> market.mass.UpdateOrder.ItemsFinalized
	14, // 7: market.mass.UpdateOrder.order_canceled:type_name -> market.mass.UpdateOrder.OrderCanceled
	0,  // 8: market.mass.ShopEvent.shop_manifest:type_name -> market.mass.ShopManifest
	1,  // 9: market.mass.ShopEvent.update_shop_manifest:type_name -> market.mass.UpdateShopManifest
	2,  // 10: market.mass.ShopEvent.create_item:type_name -> market.mass.CreateItem
	3,  // 11: market.mass.ShopEvent.update_item:type_name -> market.mass.UpdateItem
	4,  // 12: market.mass.ShopEvent.create_tag:type_name -> market.mass.CreateTag
	5,  // 13: market.mass.ShopEvent.update_tag:type_name -> market.mass.UpdateTag
	8,  // 14: market.mass.ShopEvent.create_order:type_name -> market.mass.CreateOrder
	9,  // 15: market.mass.ShopEvent.update_order:type_name -> market.mass.UpdateOrder
	6,  // 16: market.mass.ShopEvent.change_stock:type_name -> market.mass.ChangeStock
	7,  // 17: market.mass.ShopEvent.new_key_card:type_name -> market.mass.NewKeyCard
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_shop_events_proto_init() }
func file_shop_events_proto_init() {
	if File_shop_events_proto != nil {
		return
	}
	file_shop_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_shop_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShopManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewKeyCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_events_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateShopManifest_Payee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_events_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrder_ChangeItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_events_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrder_ItemsFinalized); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shop_events_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrder_OrderCanceled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_shop_events_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_shop_events_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_shop_events_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_shop_events_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*UpdateOrder_ChangeItems_)(nil),
		(*UpdateOrder_ItemsFinalized_)(nil),
		(*UpdateOrder_OrderCanceled_)(nil),
	}
	file_shop_events_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*ShopEvent_ShopManifest)(nil),
		(*ShopEvent_UpdateShopManifest)(nil),
		(*ShopEvent_CreateItem)(nil),
		(*ShopEvent_UpdateItem)(nil),
		(*ShopEvent_CreateTag)(nil),
		(*ShopEvent_UpdateTag)(nil),
		(*ShopEvent_CreateOrder)(nil),
		(*ShopEvent_UpdateOrder)(nil),
		(*ShopEvent_ChangeStock)(nil),
		(*ShopEvent_NewKeyCard)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shop_events_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shop_events_proto_goTypes,
		DependencyIndexes: file_shop_events_proto_depIdxs,
		MessageInfos:      file_shop_events_proto_msgTypes,
	}.Build()
	File_shop_events_proto = out.File
	file_shop_events_proto_rawDesc = nil
	file_shop_events_proto_goTypes = nil
	file_shop_events_proto_depIdxs = nil
}
