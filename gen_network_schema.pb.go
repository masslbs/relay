// Generated from /nix/store/q78pv7pjxg55yz0xm7dy5byhn0nwv8jr-source/schema.proto at version v1 (1ccb579bd1e651605256d144b1fb3575cea81284)

// SPDX-FileCopyrightText: 2024 Mass Labs
//
// SPDX-License-Identifier: GPL-3.0-or-later

// This file defines the protocol between relays and clients.
// It is orthogonal to the store registry and other smart contracts.
//
// Messages must be prefixed with their acompanying encoding number
// as a single byte. encoding.txt defines the number for each message.
//
// Furthermore, we expect only one message per write/binary frame.
// This means no buffering of multiple messages into a single write.
// The protocol offers repeated fields where approriate for higher throughput.
// A suggested transport is WebSocket over HTTPS but the protocol is
// agnostic, as long as it can handle binary data and keeps the framing intact.
//
// For upgrades there exists a VERSION file in the root of the repository.
// The VERSION is a single unsigned integer, incremented for each change.
// The client and relay must agree on the VERSION before starting the protocol.
// In the case of WebSocket, the VERSION can be compared via the URL.
// The relay must close the connection if the VERSION isn't supported.
//
//
// As of this version, the protocol is grouped into 2 categories:
// Events, which define the content of a Store,
// and Request/Response methods to exchange information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: network-schema.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// for now we assume the owner can't be changed
type UpdateManifest_ManifestField int32

const (
	// needed as a side-effect of what protobuf calls "open enums"
	UpdateManifest_MANIFEST_FIELD_UNSPECIFIED   UpdateManifest_ManifestField = 0
	UpdateManifest_MANIFEST_FIELD_DOMAIN        UpdateManifest_ManifestField = 1 // uses value:3 (type string)
	UpdateManifest_MANIFEST_FIELD_PUBLISHED_TAG UpdateManifest_ManifestField = 2 // uses value:4 (type event_id)
	UpdateManifest_MANIFEST_FIELD_ADD_ERC20     UpdateManifest_ManifestField = 3 // add uses value:5 (addrress)
	UpdateManifest_MANIFEST_FIELD_REMOVE_ERC20  UpdateManifest_ManifestField = 4 // uses value:5 (address)
)

// Enum value maps for UpdateManifest_ManifestField.
var (
	UpdateManifest_ManifestField_name = map[int32]string{
		0: "MANIFEST_FIELD_UNSPECIFIED",
		1: "MANIFEST_FIELD_DOMAIN",
		2: "MANIFEST_FIELD_PUBLISHED_TAG",
		3: "MANIFEST_FIELD_ADD_ERC20",
		4: "MANIFEST_FIELD_REMOVE_ERC20",
	}
	UpdateManifest_ManifestField_value = map[string]int32{
		"MANIFEST_FIELD_UNSPECIFIED":   0,
		"MANIFEST_FIELD_DOMAIN":        1,
		"MANIFEST_FIELD_PUBLISHED_TAG": 2,
		"MANIFEST_FIELD_ADD_ERC20":     3,
		"MANIFEST_FIELD_REMOVE_ERC20":  4,
	}
)

func (x UpdateManifest_ManifestField) Enum() *UpdateManifest_ManifestField {
	p := new(UpdateManifest_ManifestField)
	*p = x
	return p
}

func (x UpdateManifest_ManifestField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateManifest_ManifestField) Descriptor() protoreflect.EnumDescriptor {
	return file_network_schema_proto_enumTypes[0].Descriptor()
}

func (UpdateManifest_ManifestField) Type() protoreflect.EnumType {
	return &file_network_schema_proto_enumTypes[0]
}

func (x UpdateManifest_ManifestField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateManifest_ManifestField.Descriptor instead.
func (UpdateManifest_ManifestField) EnumDescriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{1, 0}
}

type UpdateItem_ItemField int32

const (
	UpdateItem_ITEM_FIELD_UNSPECIFIED UpdateItem_ItemField = 0
	UpdateItem_ITEM_FIELD_PRICE       UpdateItem_ItemField = 1
	UpdateItem_ITEM_FIELD_METADATA    UpdateItem_ItemField = 2
)

// Enum value maps for UpdateItem_ItemField.
var (
	UpdateItem_ItemField_name = map[int32]string{
		0: "ITEM_FIELD_UNSPECIFIED",
		1: "ITEM_FIELD_PRICE",
		2: "ITEM_FIELD_METADATA",
	}
	UpdateItem_ItemField_value = map[string]int32{
		"ITEM_FIELD_UNSPECIFIED": 0,
		"ITEM_FIELD_PRICE":       1,
		"ITEM_FIELD_METADATA":    2,
	}
)

func (x UpdateItem_ItemField) Enum() *UpdateItem_ItemField {
	p := new(UpdateItem_ItemField)
	*p = x
	return p
}

func (x UpdateItem_ItemField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateItem_ItemField) Descriptor() protoreflect.EnumDescriptor {
	return file_network_schema_proto_enumTypes[1].Descriptor()
}

func (UpdateItem_ItemField) Type() protoreflect.EnumType {
	return &file_network_schema_proto_enumTypes[1]
}

func (x UpdateItem_ItemField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateItem_ItemField.Descriptor instead.
func (UpdateItem_ItemField) EnumDescriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{3, 0}
}

// First genisis message of a store.
// Has to be the first message that is written and can only be written once.
// Use UpdateManifest to make changes.
type StoreManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The event_id is a unique identifier for an event.
	// Currently it's 32 bytes of random data.
	// It also functions as a nonce for The events signature.
	// The global identifier of an Item should also include the store_token_id.
	// hash(store_token_id:signature) might suffice then with a smaller nonce.
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// The NFT Token ID used in StoreReg.registerStore().
	// Checkout will ownerOf() this to determine the addr for PurchaseFactory.
	StoreTokenId []byte `protobuf:"bytes,2,opt,name=store_token_id,json=storeTokenId,proto3" json:"store_token_id,omitempty"`
	// Website URL of the store
	// TODO: might change this to metdata inside the NFT URL.
	Domain string `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	// the system tag used to list active items
	PublishedTagId []byte `protobuf:"bytes,4,opt,name=published_tag_id,json=publishedTagId,proto3" json:"published_tag_id,omitempty"`
}

func (x *StoreManifest) Reset() {
	*x = StoreManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreManifest) ProtoMessage() {}

func (x *StoreManifest) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreManifest.ProtoReflect.Descriptor instead.
func (*StoreManifest) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{0}
}

func (x *StoreManifest) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *StoreManifest) GetStoreTokenId() []byte {
	if x != nil {
		return x.StoreTokenId
	}
	return nil
}

func (x *StoreManifest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *StoreManifest) GetPublishedTagId() []byte {
	if x != nil {
		return x.PublishedTagId
	}
	return nil
}

// Used to update the store manifest.
// The Field enum determines the field to be updated and the value to be used.
type UpdateManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// Defines the field to be updated and determines the value to be used.
	Field UpdateManifest_ManifestField `protobuf:"varint,2,opt,name=field,proto3,enum=market.mass.UpdateManifest_ManifestField" json:"field,omitempty"`
	// Types that are assignable to Value:
	//
	//	*UpdateManifest_String_
	//	*UpdateManifest_TagId
	//	*UpdateManifest_Erc20Addr
	Value isUpdateManifest_Value `protobuf_oneof:"value"`
}

func (x *UpdateManifest) Reset() {
	*x = UpdateManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateManifest) ProtoMessage() {}

func (x *UpdateManifest) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateManifest.ProtoReflect.Descriptor instead.
func (*UpdateManifest) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateManifest) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *UpdateManifest) GetField() UpdateManifest_ManifestField {
	if x != nil {
		return x.Field
	}
	return UpdateManifest_MANIFEST_FIELD_UNSPECIFIED
}

func (m *UpdateManifest) GetValue() isUpdateManifest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *UpdateManifest) GetString_() string {
	if x, ok := x.GetValue().(*UpdateManifest_String_); ok {
		return x.String_
	}
	return ""
}

func (x *UpdateManifest) GetTagId() []byte {
	if x, ok := x.GetValue().(*UpdateManifest_TagId); ok {
		return x.TagId
	}
	return nil
}

func (x *UpdateManifest) GetErc20Addr() []byte {
	if x, ok := x.GetValue().(*UpdateManifest_Erc20Addr); ok {
		return x.Erc20Addr
	}
	return nil
}

type isUpdateManifest_Value interface {
	isUpdateManifest_Value()
}

type UpdateManifest_String_ struct {
	String_ string `protobuf:"bytes,3,opt,name=string,proto3,oneof"`
}

type UpdateManifest_TagId struct {
	TagId []byte `protobuf:"bytes,4,opt,name=tag_id,json=tagId,proto3,oneof"` // See event_id for details
}

type UpdateManifest_Erc20Addr struct {
	Erc20Addr []byte `protobuf:"bytes,5,opt,name=erc20_addr,json=erc20Addr,proto3,oneof"` // 20 bytes
}

func (*UpdateManifest_String_) isUpdateManifest_Value() {}

func (*UpdateManifest_TagId) isUpdateManifest_Value() {}

func (*UpdateManifest_Erc20Addr) isUpdateManifest_Value() {}

// Creates an item in the store.
type CreateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// decimal number as a string.
	// numbers need to be always formatted to 2 decimal places.
	// the demcimal place must use a dot ('.') as the separator.
	Price string `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	// should be valid JSON
	// TODO: make a json schmea with minimal/required fields
	Metadata []byte `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *CreateItem) Reset() {
	*x = CreateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItem) ProtoMessage() {}

func (x *CreateItem) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItem.ProtoReflect.Descriptor instead.
func (*CreateItem) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{2}
}

func (x *CreateItem) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *CreateItem) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CreateItem) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// UpdateItem changes the price or metadata of an item.
// Follows the same pattern as UpdateManifest.
type UpdateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte               `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	ItemId  []byte               `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"` // the event_id of the CreateItem event
	Field   UpdateItem_ItemField `protobuf:"varint,3,opt,name=field,proto3,enum=market.mass.UpdateItem_ItemField" json:"field,omitempty"`
	// Types that are assignable to Value:
	//
	//	*UpdateItem_Price
	//	*UpdateItem_Metadata
	Value isUpdateItem_Value `protobuf_oneof:"value"`
}

func (x *UpdateItem) Reset() {
	*x = UpdateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItem) ProtoMessage() {}

func (x *UpdateItem) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItem.ProtoReflect.Descriptor instead.
func (*UpdateItem) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateItem) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *UpdateItem) GetItemId() []byte {
	if x != nil {
		return x.ItemId
	}
	return nil
}

func (x *UpdateItem) GetField() UpdateItem_ItemField {
	if x != nil {
		return x.Field
	}
	return UpdateItem_ITEM_FIELD_UNSPECIFIED
}

func (m *UpdateItem) GetValue() isUpdateItem_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *UpdateItem) GetPrice() string {
	if x, ok := x.GetValue().(*UpdateItem_Price); ok {
		return x.Price
	}
	return ""
}

func (x *UpdateItem) GetMetadata() []byte {
	if x, ok := x.GetValue().(*UpdateItem_Metadata); ok {
		return x.Metadata
	}
	return nil
}

type isUpdateItem_Value interface {
	isUpdateItem_Value()
}

type UpdateItem_Price struct {
	Price string `protobuf:"bytes,4,opt,name=price,proto3,oneof"` // decimal number. See CreateItem for formatting.
}

type UpdateItem_Metadata struct {
	Metadata []byte `protobuf:"bytes,5,opt,name=metadata,proto3,oneof"`
}

func (*UpdateItem_Price) isUpdateItem_Value() {}

func (*UpdateItem_Metadata) isUpdateItem_Value() {}

// Creates a tag in the store.
// These can be used to group items into categories.
// There are also a couple of system-level tags, like published.
// Thse are used to filter items in the store.
type CreateTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateTag) Reset() {
	*x = CreateTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTag) ProtoMessage() {}

func (x *CreateTag) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTag.ProtoReflect.Descriptor instead.
func (*CreateTag) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTag) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *CreateTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Adds an item to a tag.
// TODO: might change this to the Update* pattern.
type AddToTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TagId   []byte `protobuf:"bytes,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	ItemId  []byte `protobuf:"bytes,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *AddToTag) Reset() {
	*x = AddToTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddToTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddToTag) ProtoMessage() {}

func (x *AddToTag) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddToTag.ProtoReflect.Descriptor instead.
func (*AddToTag) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{5}
}

func (x *AddToTag) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *AddToTag) GetTagId() []byte {
	if x != nil {
		return x.TagId
	}
	return nil
}

func (x *AddToTag) GetItemId() []byte {
	if x != nil {
		return x.ItemId
	}
	return nil
}

// Removes an item from a tag.
// TODO: might change this to the Update* pattern.
type RemoveFromTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TagId   []byte `protobuf:"bytes,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	ItemId  []byte `protobuf:"bytes,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *RemoveFromTag) Reset() {
	*x = RemoveFromTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFromTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromTag) ProtoMessage() {}

func (x *RemoveFromTag) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromTag.ProtoReflect.Descriptor instead.
func (*RemoveFromTag) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveFromTag) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *RemoveFromTag) GetTagId() []byte {
	if x != nil {
		return x.TagId
	}
	return nil
}

func (x *RemoveFromTag) GetItemId() []byte {
	if x != nil {
		return x.ItemId
	}
	return nil
}

// Renames a tag.
// TODO: might change this to the Update* pattern.
type RenameTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TagId   []byte `protobuf:"bytes,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RenameTag) Reset() {
	*x = RenameTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameTag) ProtoMessage() {}

func (x *RenameTag) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameTag.ProtoReflect.Descriptor instead.
func (*RenameTag) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{7}
}

func (x *RenameTag) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *RenameTag) GetTagId() []byte {
	if x != nil {
		return x.TagId
	}
	return nil
}

func (x *RenameTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Deletes a tag.
// TODO: might change this to the Update* pattern.
type DeleteTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TagId   []byte `protobuf:"bytes,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
}

func (x *DeleteTag) Reset() {
	*x = DeleteTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTag) ProtoMessage() {}

func (x *DeleteTag) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTag.ProtoReflect.Descriptor instead.
func (*DeleteTag) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTag) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *DeleteTag) GetTagId() []byte {
	if x != nil {
		return x.TagId
	}
	return nil
}

// ChangeStock is used to update the stock of on or more items.
// Created by the relay after a cart has been paied for.
type ChangeStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// length needs to match the length of the diff field
	ItemIds [][]byte `protobuf:"bytes,2,rep,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
	Diffs   []int32  `protobuf:"zigzag32,3,rep,packed,name=diffs,proto3" json:"diffs,omitempty"`
	// (optional) only set by the relay.
	// signals payment completion after a CommitCartRequest
	CartId []byte `protobuf:"bytes,4,opt,name=cart_id,json=cartId,proto3" json:"cart_id,omitempty"`
	TxHash []byte `protobuf:"bytes,5,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *ChangeStock) Reset() {
	*x = ChangeStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeStock) ProtoMessage() {}

func (x *ChangeStock) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeStock.ProtoReflect.Descriptor instead.
func (*ChangeStock) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{9}
}

func (x *ChangeStock) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *ChangeStock) GetItemIds() [][]byte {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

func (x *ChangeStock) GetDiffs() []int32 {
	if x != nil {
		return x.Diffs
	}
	return nil
}

func (x *ChangeStock) GetCartId() []byte {
	if x != nil {
		return x.CartId
	}
	return nil
}

func (x *ChangeStock) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

// created by the relay when a user enrolls a key card
type NewKeyCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId        []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	UserWalletAddr []byte `protobuf:"bytes,2,opt,name=user_wallet_addr,json=userWalletAddr,proto3" json:"user_wallet_addr,omitempty"`
	CardPublicKey  []byte `protobuf:"bytes,3,opt,name=card_public_key,json=cardPublicKey,proto3" json:"card_public_key,omitempty"`
}

func (x *NewKeyCard) Reset() {
	*x = NewKeyCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewKeyCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewKeyCard) ProtoMessage() {}

func (x *NewKeyCard) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewKeyCard.ProtoReflect.Descriptor instead.
func (*NewKeyCard) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{10}
}

func (x *NewKeyCard) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *NewKeyCard) GetUserWalletAddr() []byte {
	if x != nil {
		return x.UserWalletAddr
	}
	return nil
}

func (x *NewKeyCard) GetCardPublicKey() []byte {
	if x != nil {
		return x.CardPublicKey
	}
	return nil
}

// CreateCart is used to create a new cart.
type CreateCart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *CreateCart) Reset() {
	*x = CreateCart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCart) ProtoMessage() {}

func (x *CreateCart) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCart.ProtoReflect.Descriptor instead.
func (*CreateCart) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{11}
}

func (x *CreateCart) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

// ChangeCart is used to add or remove items from a cart.
type ChangeCart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId  []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	CartId   []byte `protobuf:"bytes,2,opt,name=cart_id,json=cartId,proto3" json:"cart_id,omitempty"`
	ItemId   []byte `protobuf:"bytes,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Quantity int32  `protobuf:"zigzag32,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ChangeCart) Reset() {
	*x = ChangeCart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeCart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeCart) ProtoMessage() {}

func (x *ChangeCart) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeCart.ProtoReflect.Descriptor instead.
func (*ChangeCart) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{12}
}

func (x *ChangeCart) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *ChangeCart) GetCartId() []byte {
	if x != nil {
		return x.CartId
	}
	return nil
}

func (x *ChangeCart) GetItemId() []byte {
	if x != nil {
		return x.ItemId
	}
	return nil
}

func (x *ChangeCart) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Created by the relay after a CommitCartRequest.
// It signals that a cart is about to be payed and can not be changed anymore.
type CartFinalized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	CartId  []byte `protobuf:"bytes,2,opt,name=cart_id,json=cartId,proto3" json:"cart_id,omitempty"`
	// the address the user needs to send the funds to
	PurchaseAddr []byte `protobuf:"bytes,3,opt,name=purchase_addr,json=purchaseAddr,proto3" json:"purchase_addr,omitempty"`
	// (optional) copied from CommitCartRequest
	Erc20Addr []byte `protobuf:"bytes,8,opt,name=erc20_addr,json=erc20Addr,proto3" json:"erc20_addr,omitempty"`
	SubTotal  string `protobuf:"bytes,4,opt,name=sub_total,json=subTotal,proto3" json:"sub_total,omitempty"`
	SalesTax  string `protobuf:"bytes,5,opt,name=sales_tax,json=salesTax,proto3" json:"sales_tax,omitempty"`
	Total     string `protobuf:"bytes,6,opt,name=total,proto3" json:"total,omitempty"` // = subtotal + sales_tax
	// The exact amount to transfer to the purchase_address.
	// bigint as string.
	TotalInCrypto string `protobuf:"bytes,7,opt,name=total_in_crypto,json=totalInCrypto,proto3" json:"total_in_crypto,omitempty"`
}

func (x *CartFinalized) Reset() {
	*x = CartFinalized{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartFinalized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartFinalized) ProtoMessage() {}

func (x *CartFinalized) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartFinalized.ProtoReflect.Descriptor instead.
func (*CartFinalized) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{13}
}

func (x *CartFinalized) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *CartFinalized) GetCartId() []byte {
	if x != nil {
		return x.CartId
	}
	return nil
}

func (x *CartFinalized) GetPurchaseAddr() []byte {
	if x != nil {
		return x.PurchaseAddr
	}
	return nil
}

func (x *CartFinalized) GetErc20Addr() []byte {
	if x != nil {
		return x.Erc20Addr
	}
	return nil
}

func (x *CartFinalized) GetSubTotal() string {
	if x != nil {
		return x.SubTotal
	}
	return ""
}

func (x *CartFinalized) GetSalesTax() string {
	if x != nil {
		return x.SalesTax
	}
	return ""
}

func (x *CartFinalized) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *CartFinalized) GetTotalInCrypto() string {
	if x != nil {
		return x.TotalInCrypto
	}
	return ""
}

// Either created by a relay for a carts that haven't been payed in time.
// Or by a clerk, for eg. when the customer steps back from the purchase.
// This frees up the items locked up in the finalized cart.
type CartAbandoned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	CartId  []byte `protobuf:"bytes,2,opt,name=cart_id,json=cartId,proto3" json:"cart_id,omitempty"`
}

func (x *CartAbandoned) Reset() {
	*x = CartAbandoned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartAbandoned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartAbandoned) ProtoMessage() {}

func (x *CartAbandoned) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartAbandoned.ProtoReflect.Descriptor instead.
func (*CartAbandoned) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{14}
}

func (x *CartAbandoned) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *CartAbandoned) GetCartId() []byte {
	if x != nil {
		return x.CartId
	}
	return nil
}

// Event is the transport wrapper for a single Event.
//
// For signatures we use https://eips.ethereum.org/EIPS/eip-712.
// The structured data definition are specified in `typedData.json`.
// The KeyCard keypair is used to sign or verify the data.
// The Set of all valid keys is all NewKeyCard events
// plus the Relays assigned on the StoreReg smart contract.
//
// Special care must be taken for Events with optional and union fields.
// Specifically these are `UpdateManifest`, `UpdateItem` and `ChangeStock`.
// Some implementations of `eth_signTypedData` are fine with `null` fields,
// while others aren't.
// Therefore, the structured data specification
// needs to be pruned from fields that are not set.
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// Types that are assignable to Union:
	//
	//	*Event_StoreManifest
	//	*Event_UpdateManifest
	//	*Event_CreateItem
	//	*Event_UpdateItem
	//	*Event_CreateTag
	//	*Event_AddToTag
	//	*Event_RemoveFromTag
	//	*Event_RenameTag
	//	*Event_DeleteTag
	//	*Event_CreateCart
	//	*Event_ChangeCart
	//	*Event_CartFinalized
	//	*Event_CartAbandoned
	//	*Event_ChangeStock
	//	*Event_NewKeyCard
	Union isEvent_Union `protobuf_oneof:"union"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{15}
}

func (x *Event) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (m *Event) GetUnion() isEvent_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *Event) GetStoreManifest() *StoreManifest {
	if x, ok := x.GetUnion().(*Event_StoreManifest); ok {
		return x.StoreManifest
	}
	return nil
}

func (x *Event) GetUpdateManifest() *UpdateManifest {
	if x, ok := x.GetUnion().(*Event_UpdateManifest); ok {
		return x.UpdateManifest
	}
	return nil
}

func (x *Event) GetCreateItem() *CreateItem {
	if x, ok := x.GetUnion().(*Event_CreateItem); ok {
		return x.CreateItem
	}
	return nil
}

func (x *Event) GetUpdateItem() *UpdateItem {
	if x, ok := x.GetUnion().(*Event_UpdateItem); ok {
		return x.UpdateItem
	}
	return nil
}

func (x *Event) GetCreateTag() *CreateTag {
	if x, ok := x.GetUnion().(*Event_CreateTag); ok {
		return x.CreateTag
	}
	return nil
}

func (x *Event) GetAddToTag() *AddToTag {
	if x, ok := x.GetUnion().(*Event_AddToTag); ok {
		return x.AddToTag
	}
	return nil
}

func (x *Event) GetRemoveFromTag() *RemoveFromTag {
	if x, ok := x.GetUnion().(*Event_RemoveFromTag); ok {
		return x.RemoveFromTag
	}
	return nil
}

func (x *Event) GetRenameTag() *RenameTag {
	if x, ok := x.GetUnion().(*Event_RenameTag); ok {
		return x.RenameTag
	}
	return nil
}

func (x *Event) GetDeleteTag() *DeleteTag {
	if x, ok := x.GetUnion().(*Event_DeleteTag); ok {
		return x.DeleteTag
	}
	return nil
}

func (x *Event) GetCreateCart() *CreateCart {
	if x, ok := x.GetUnion().(*Event_CreateCart); ok {
		return x.CreateCart
	}
	return nil
}

func (x *Event) GetChangeCart() *ChangeCart {
	if x, ok := x.GetUnion().(*Event_ChangeCart); ok {
		return x.ChangeCart
	}
	return nil
}

func (x *Event) GetCartFinalized() *CartFinalized {
	if x, ok := x.GetUnion().(*Event_CartFinalized); ok {
		return x.CartFinalized
	}
	return nil
}

func (x *Event) GetCartAbandoned() *CartAbandoned {
	if x, ok := x.GetUnion().(*Event_CartAbandoned); ok {
		return x.CartAbandoned
	}
	return nil
}

func (x *Event) GetChangeStock() *ChangeStock {
	if x, ok := x.GetUnion().(*Event_ChangeStock); ok {
		return x.ChangeStock
	}
	return nil
}

func (x *Event) GetNewKeyCard() *NewKeyCard {
	if x, ok := x.GetUnion().(*Event_NewKeyCard); ok {
		return x.NewKeyCard
	}
	return nil
}

type isEvent_Union interface {
	isEvent_Union()
}

type Event_StoreManifest struct {
	StoreManifest *StoreManifest `protobuf:"bytes,2,opt,name=store_manifest,json=storeManifest,proto3,oneof"`
}

type Event_UpdateManifest struct {
	UpdateManifest *UpdateManifest `protobuf:"bytes,3,opt,name=update_manifest,json=updateManifest,proto3,oneof"`
}

type Event_CreateItem struct {
	CreateItem *CreateItem `protobuf:"bytes,4,opt,name=create_item,json=createItem,proto3,oneof"`
}

type Event_UpdateItem struct {
	UpdateItem *UpdateItem `protobuf:"bytes,5,opt,name=update_item,json=updateItem,proto3,oneof"`
}

type Event_CreateTag struct {
	CreateTag *CreateTag `protobuf:"bytes,6,opt,name=create_tag,json=createTag,proto3,oneof"`
}

type Event_AddToTag struct {
	AddToTag *AddToTag `protobuf:"bytes,7,opt,name=add_to_tag,json=addToTag,proto3,oneof"`
}

type Event_RemoveFromTag struct {
	RemoveFromTag *RemoveFromTag `protobuf:"bytes,8,opt,name=remove_from_tag,json=removeFromTag,proto3,oneof"`
}

type Event_RenameTag struct {
	RenameTag *RenameTag `protobuf:"bytes,9,opt,name=rename_tag,json=renameTag,proto3,oneof"`
}

type Event_DeleteTag struct {
	DeleteTag *DeleteTag `protobuf:"bytes,10,opt,name=delete_tag,json=deleteTag,proto3,oneof"`
}

type Event_CreateCart struct {
	CreateCart *CreateCart `protobuf:"bytes,11,opt,name=create_cart,json=createCart,proto3,oneof"`
}

type Event_ChangeCart struct {
	ChangeCart *ChangeCart `protobuf:"bytes,12,opt,name=change_cart,json=changeCart,proto3,oneof"`
}

type Event_CartFinalized struct {
	CartFinalized *CartFinalized `protobuf:"bytes,15,opt,name=cart_finalized,json=cartFinalized,proto3,oneof"`
}

type Event_CartAbandoned struct {
	CartAbandoned *CartAbandoned `protobuf:"bytes,16,opt,name=cart_abandoned,json=cartAbandoned,proto3,oneof"`
}

type Event_ChangeStock struct {
	ChangeStock *ChangeStock `protobuf:"bytes,13,opt,name=change_stock,json=changeStock,proto3,oneof"`
}

type Event_NewKeyCard struct {
	NewKeyCard *NewKeyCard `protobuf:"bytes,14,opt,name=new_key_card,json=newKeyCard,proto3,oneof"`
}

func (*Event_StoreManifest) isEvent_Union() {}

func (*Event_UpdateManifest) isEvent_Union() {}

func (*Event_CreateItem) isEvent_Union() {}

func (*Event_UpdateItem) isEvent_Union() {}

func (*Event_CreateTag) isEvent_Union() {}

func (*Event_AddToTag) isEvent_Union() {}

func (*Event_RemoveFromTag) isEvent_Union() {}

func (*Event_RenameTag) isEvent_Union() {}

func (*Event_DeleteTag) isEvent_Union() {}

func (*Event_CreateCart) isEvent_Union() {}

func (*Event_ChangeCart) isEvent_Union() {}

func (*Event_CartFinalized) isEvent_Union() {}

func (*Event_CartAbandoned) isEvent_Union() {}

func (*Event_ChangeStock) isEvent_Union() {}

func (*Event_NewKeyCard) isEvent_Union() {}

// Initiates the challenge/response protocol.
type AuthenticateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See PingRequest for details
	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	PublicKey []byte `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"` // of their keyCard
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{16}
}

func (x *AuthenticateRequest) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *AuthenticateRequest) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// Returns an error if the public key is not an enrolled KeyCard.
// or a challenge to be signed by the KeyCard.
type AuthenticateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Error     *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Challenge []byte `protobuf:"bytes,3,opt,name=challenge,proto3" json:"challenge,omitempty"`
}

func (x *AuthenticateResponse) Reset() {
	*x = AuthenticateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse) ProtoMessage() {}

func (x *AuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{17}
}

func (x *AuthenticateResponse) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *AuthenticateResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *AuthenticateResponse) GetChallenge() []byte {
	if x != nil {
		return x.Challenge
	}
	return nil
}

// Completes authentication by supplying the signature over the challenge.
type ChallengeSolvedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ChallengeSolvedRequest) Reset() {
	*x = ChallengeSolvedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeSolvedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeSolvedRequest) ProtoMessage() {}

func (x *ChallengeSolvedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeSolvedRequest.ProtoReflect.Descriptor instead.
func (*ChallengeSolvedRequest) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{18}
}

func (x *ChallengeSolvedRequest) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *ChallengeSolvedRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// No error means the user is authenticated.
type ChallengeSolvedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Error     *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ChallengeSolvedResponse) Reset() {
	*x = ChallengeSolvedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeSolvedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeSolvedResponse) ProtoMessage() {}

func (x *ChallengeSolvedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeSolvedResponse.ProtoReflect.Descriptor instead.
func (*ChallengeSolvedResponse) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{19}
}

func (x *ChallengeSolvedResponse) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *ChallengeSolvedResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Initiate check out of a cart
type CommitCartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	CartId    []byte `protobuf:"bytes,2,opt,name=cart_id,json=cartId,proto3" json:"cart_id,omitempty"`
	Erc20Addr []byte `protobuf:"bytes,3,opt,name=erc20_addr,json=erc20Addr,proto3" json:"erc20_addr,omitempty"` // emtpy/unset means vanilla ETH
}

func (x *CommitCartRequest) Reset() {
	*x = CommitCartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitCartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitCartRequest) ProtoMessage() {}

func (x *CommitCartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitCartRequest.ProtoReflect.Descriptor instead.
func (*CommitCartRequest) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{20}
}

func (x *CommitCartRequest) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *CommitCartRequest) GetCartId() []byte {
	if x != nil {
		return x.CartId
	}
	return nil
}

func (x *CommitCartRequest) GetErc20Addr() []byte {
	if x != nil {
		return x.Erc20Addr
	}
	return nil
}

// Returns an error if the cart is already finalized.
// No error blocks further changes to a cart and starts the payment process.
// TODO: we might change the payload in this to an Event for longevity.
type CommitCartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId       []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Error           *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	CartFinalizedId []byte `protobuf:"bytes,3,opt,name=cart_finalized_id,json=cartFinalizedId,proto3" json:"cart_finalized_id,omitempty"`
}

func (x *CommitCartResponse) Reset() {
	*x = CommitCartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitCartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitCartResponse) ProtoMessage() {}

func (x *CommitCartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitCartResponse.ProtoReflect.Descriptor instead.
func (*CommitCartResponse) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{21}
}

func (x *CommitCartResponse) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *CommitCartResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CommitCartResponse) GetCartFinalizedId() []byte {
	if x != nil {
		return x.CartFinalizedId
	}
	return nil
}

// Get an URL to upload a blob to.
// This exists for future-proofing the protocol
// and reduce stress on the websocket connection.
type GetBlobUploadURLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *GetBlobUploadURLRequest) Reset() {
	*x = GetBlobUploadURLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlobUploadURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlobUploadURLRequest) ProtoMessage() {}

func (x *GetBlobUploadURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlobUploadURLRequest.ProtoReflect.Descriptor instead.
func (*GetBlobUploadURLRequest) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{22}
}

func (x *GetBlobUploadURLRequest) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

// Returns a single-use URL to upload a blob to.
// The HTTP response will contain the blob's IPFS path.
type GetBlobUploadURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Error     *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Url       string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetBlobUploadURLResponse) Reset() {
	*x = GetBlobUploadURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlobUploadURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlobUploadURLResponse) ProtoMessage() {}

func (x *GetBlobUploadURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlobUploadURLResponse.ProtoReflect.Descriptor instead.
func (*GetBlobUploadURLResponse) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{23}
}

func (x *GetBlobUploadURLResponse) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *GetBlobUploadURLResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetBlobUploadURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// Used by the Client to write a single event to the store.
type EventWriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Event     *Event `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *EventWriteRequest) Reset() {
	*x = EventWriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventWriteRequest) ProtoMessage() {}

func (x *EventWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventWriteRequest.ProtoReflect.Descriptor instead.
func (*EventWriteRequest) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{24}
}

func (x *EventWriteRequest) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *EventWriteRequest) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

// Might return an error if the event or its signature is invalid.
// If no error is returned,
// the new_store_hash is the hash of the store with the new event applied.
// The event_sequence_no is the index of the event in the stores log.
type EventWriteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId       []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Error           *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	NewStoreHash    []byte `protobuf:"bytes,3,opt,name=new_store_hash,json=newStoreHash,proto3" json:"new_store_hash,omitempty"`
	EventSequenceNo uint64 `protobuf:"varint,4,opt,name=event_sequence_no,json=eventSequenceNo,proto3" json:"event_sequence_no,omitempty"`
}

func (x *EventWriteResponse) Reset() {
	*x = EventWriteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventWriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventWriteResponse) ProtoMessage() {}

func (x *EventWriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventWriteResponse.ProtoReflect.Descriptor instead.
func (*EventWriteResponse) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{25}
}

func (x *EventWriteResponse) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *EventWriteResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *EventWriteResponse) GetNewStoreHash() []byte {
	if x != nil {
		return x.NewStoreHash
	}
	return nil
}

func (x *EventWriteResponse) GetEventSequenceNo() uint64 {
	if x != nil {
		return x.EventSequenceNo
	}
	return 0
}

// Sent by the relay to signal the number of unpushed events.
type SyncStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId      []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	UnpushedEvents uint64 `protobuf:"varint,2,opt,name=unpushed_events,json=unpushedEvents,proto3" json:"unpushed_events,omitempty"`
}

func (x *SyncStatusRequest) Reset() {
	*x = SyncStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStatusRequest) ProtoMessage() {}

func (x *SyncStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStatusRequest.ProtoReflect.Descriptor instead.
func (*SyncStatusRequest) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{26}
}

func (x *SyncStatusRequest) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *SyncStatusRequest) GetUnpushedEvents() uint64 {
	if x != nil {
		return x.UnpushedEvents
	}
	return 0
}

type SyncStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Error     *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SyncStatusResponse) Reset() {
	*x = SyncStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStatusResponse) ProtoMessage() {}

func (x *SyncStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStatusResponse.ProtoReflect.Descriptor instead.
func (*SyncStatusResponse) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{27}
}

func (x *SyncStatusResponse) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *SyncStatusResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Used by the relay to push events to the client.
// Will not sent more events until the client has acknowledged the last batch.
type EventPushRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId []byte   `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Events    []*Event `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EventPushRequest) Reset() {
	*x = EventPushRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPushRequest) ProtoMessage() {}

func (x *EventPushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPushRequest.ProtoReflect.Descriptor instead.
func (*EventPushRequest) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{28}
}

func (x *EventPushRequest) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *EventPushRequest) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type EventPushResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Error     *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *EventPushResponse) Reset() {
	*x = EventPushResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPushResponse) ProtoMessage() {}

func (x *EventPushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPushResponse.ProtoReflect.Descriptor instead.
func (*EventPushResponse) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{29}
}

func (x *EventPushResponse) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *EventPushResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

// Sent by the relay to check for the clients liveness.
// The client needs to respond with a PingResponse.
// The relay will close the connection if the client doesn't respond 3 times.
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 16 bytes, chosen by the sender but should be random.
	// Used to match the response to the request.
	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{30}
}

func (x *PingRequest) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Error     *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{31}
}

func (x *PingResponse) GetRequestId() []byte {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *PingResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TODO: make a list of error codes, maybe enum
	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_network_schema_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_network_schema_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_network_schema_proto_rawDescGZIP(), []int{32}
}

func (x *Error) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_network_schema_proto protoreflect.FileDescriptor

var file_network_schema_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x28,
	0x0a, 0x10, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x54, 0x61, 0x67, 0x49, 0x64, 0x22, 0xf7, 0x02, 0x0a, 0x0e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x17, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x65, 0x72,
	0x63, 0x32, 0x30, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x09, 0x65, 0x72, 0x63, 0x32, 0x30, 0x41, 0x64, 0x64, 0x72, 0x22, 0xab, 0x01, 0x0a, 0x0d,
	0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1e, 0x0a,
	0x1a, 0x4d, 0x41, 0x4e, 0x49, 0x46, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a,
	0x15, 0x4d, 0x41, 0x4e, 0x49, 0x46, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x41, 0x4e, 0x49,
	0x46, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49,
	0x53, 0x48, 0x45, 0x44, 0x5f, 0x54, 0x41, 0x47, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x41,
	0x4e, 0x49, 0x46, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x41, 0x44, 0x44,
	0x5f, 0x45, 0x52, 0x43, 0x32, 0x30, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x41, 0x4e, 0x49,
	0x46, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56,
	0x45, 0x5f, 0x45, 0x52, 0x43, 0x32, 0x30, 0x10, 0x04, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x59, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x90, 0x02,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x37, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x56, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x16,
	0x49, 0x54, 0x45, 0x4d, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x54, 0x45, 0x4d,
	0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x50, 0x52, 0x49, 0x43, 0x45, 0x10, 0x01, 0x12, 0x17,
	0x0a, 0x13, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4d, 0x45, 0x54,
	0x41, 0x44, 0x41, 0x54, 0x41, 0x10, 0x02, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3a, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x54, 0x6f, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22,
	0x51, 0x0a, 0x09, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x3d, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49,
	0x64, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x69, 0x66, 0x66, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x11, 0x52, 0x05, 0x64, 0x69, 0x66, 0x66, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22,
	0x79, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x43, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x61, 0x72,
	0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x27, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x61, 0x72,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63,
	0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xff, 0x01, 0x0a, 0x0d, 0x43,
	0x61, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x63, 0x32, 0x30, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x65, 0x72, 0x63, 0x32, 0x30,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x74, 0x61, 0x78, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x61, 0x78, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x6e,
	0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x0d,
	0x43, 0x61, 0x72, 0x74, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x61, 0x72, 0x74, 0x49,
	0x64, 0x22, 0xd9, 0x07, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x46,
	0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x48, 0x00, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x37,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x48, 0x00, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x35, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x5f, 0x74,
	0x6f, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x54,
	0x61, 0x67, 0x48, 0x00, 0x52, 0x08, 0x61, 0x64, 0x64, 0x54, 0x6f, 0x54, 0x61, 0x67, 0x12, 0x44,
	0x0a, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x54, 0x61, 0x67, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x54, 0x61, 0x67, 0x12, 0x37, 0x0a, 0x0a, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74,
	0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x67,
	0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x67, 0x12, 0x37, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x3a, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x63, 0x61, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x72,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x61, 0x72, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x61, 0x72, 0x74, 0x12, 0x43,
	0x0a, 0x0e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x62, 0x61, 0x6e,
	0x64, 0x6f, 0x6e, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x41, 0x62,
	0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x74, 0x41,
	0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x3b, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x4b,
	0x65, 0x79, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79,
	0x43, 0x61, 0x72, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a,
	0x13, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x22, 0x7d, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x22, 0x55, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x6f,
	0x6c, 0x76, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x62, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6a, 0x0a, 0x11,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x63,
	0x32, 0x30, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x65,
	0x72, 0x63, 0x32, 0x30, 0x41, 0x64, 0x64, 0x72, 0x22, 0x89, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x43, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x61, 0x72, 0x74,
	0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0f, 0x63, 0x61, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x75,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x62, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x5c, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0xaf, 0x01, 0x0a, 0x12, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6e, 0x65, 0x77,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x22, 0x5b, 0x0a, 0x11, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x70,
	0x75, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x75, 0x6e, 0x70, 0x75, 0x73, 0x68, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x5d, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x5d, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x5c, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x2c,
	0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x0c,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x35, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_network_schema_proto_rawDescOnce sync.Once
	file_network_schema_proto_rawDescData = file_network_schema_proto_rawDesc
)

func file_network_schema_proto_rawDescGZIP() []byte {
	file_network_schema_proto_rawDescOnce.Do(func() {
		file_network_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_network_schema_proto_rawDescData)
	})
	return file_network_schema_proto_rawDescData
}

var file_network_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_network_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_network_schema_proto_goTypes = []interface{}{
	(UpdateManifest_ManifestField)(0), // 0: market.mass.UpdateManifest.ManifestField
	(UpdateItem_ItemField)(0),         // 1: market.mass.UpdateItem.ItemField
	(*StoreManifest)(nil),             // 2: market.mass.StoreManifest
	(*UpdateManifest)(nil),            // 3: market.mass.UpdateManifest
	(*CreateItem)(nil),                // 4: market.mass.CreateItem
	(*UpdateItem)(nil),                // 5: market.mass.UpdateItem
	(*CreateTag)(nil),                 // 6: market.mass.CreateTag
	(*AddToTag)(nil),                  // 7: market.mass.AddToTag
	(*RemoveFromTag)(nil),             // 8: market.mass.RemoveFromTag
	(*RenameTag)(nil),                 // 9: market.mass.RenameTag
	(*DeleteTag)(nil),                 // 10: market.mass.DeleteTag
	(*ChangeStock)(nil),               // 11: market.mass.ChangeStock
	(*NewKeyCard)(nil),                // 12: market.mass.NewKeyCard
	(*CreateCart)(nil),                // 13: market.mass.CreateCart
	(*ChangeCart)(nil),                // 14: market.mass.ChangeCart
	(*CartFinalized)(nil),             // 15: market.mass.CartFinalized
	(*CartAbandoned)(nil),             // 16: market.mass.CartAbandoned
	(*Event)(nil),                     // 17: market.mass.Event
	(*AuthenticateRequest)(nil),       // 18: market.mass.AuthenticateRequest
	(*AuthenticateResponse)(nil),      // 19: market.mass.AuthenticateResponse
	(*ChallengeSolvedRequest)(nil),    // 20: market.mass.ChallengeSolvedRequest
	(*ChallengeSolvedResponse)(nil),   // 21: market.mass.ChallengeSolvedResponse
	(*CommitCartRequest)(nil),         // 22: market.mass.CommitCartRequest
	(*CommitCartResponse)(nil),        // 23: market.mass.CommitCartResponse
	(*GetBlobUploadURLRequest)(nil),   // 24: market.mass.GetBlobUploadURLRequest
	(*GetBlobUploadURLResponse)(nil),  // 25: market.mass.GetBlobUploadURLResponse
	(*EventWriteRequest)(nil),         // 26: market.mass.EventWriteRequest
	(*EventWriteResponse)(nil),        // 27: market.mass.EventWriteResponse
	(*SyncStatusRequest)(nil),         // 28: market.mass.SyncStatusRequest
	(*SyncStatusResponse)(nil),        // 29: market.mass.SyncStatusResponse
	(*EventPushRequest)(nil),          // 30: market.mass.EventPushRequest
	(*EventPushResponse)(nil),         // 31: market.mass.EventPushResponse
	(*PingRequest)(nil),               // 32: market.mass.PingRequest
	(*PingResponse)(nil),              // 33: market.mass.PingResponse
	(*Error)(nil),                     // 34: market.mass.Error
}
var file_network_schema_proto_depIdxs = []int32{
	0,  // 0: market.mass.UpdateManifest.field:type_name -> market.mass.UpdateManifest.ManifestField
	1,  // 1: market.mass.UpdateItem.field:type_name -> market.mass.UpdateItem.ItemField
	2,  // 2: market.mass.Event.store_manifest:type_name -> market.mass.StoreManifest
	3,  // 3: market.mass.Event.update_manifest:type_name -> market.mass.UpdateManifest
	4,  // 4: market.mass.Event.create_item:type_name -> market.mass.CreateItem
	5,  // 5: market.mass.Event.update_item:type_name -> market.mass.UpdateItem
	6,  // 6: market.mass.Event.create_tag:type_name -> market.mass.CreateTag
	7,  // 7: market.mass.Event.add_to_tag:type_name -> market.mass.AddToTag
	8,  // 8: market.mass.Event.remove_from_tag:type_name -> market.mass.RemoveFromTag
	9,  // 9: market.mass.Event.rename_tag:type_name -> market.mass.RenameTag
	10, // 10: market.mass.Event.delete_tag:type_name -> market.mass.DeleteTag
	13, // 11: market.mass.Event.create_cart:type_name -> market.mass.CreateCart
	14, // 12: market.mass.Event.change_cart:type_name -> market.mass.ChangeCart
	15, // 13: market.mass.Event.cart_finalized:type_name -> market.mass.CartFinalized
	16, // 14: market.mass.Event.cart_abandoned:type_name -> market.mass.CartAbandoned
	11, // 15: market.mass.Event.change_stock:type_name -> market.mass.ChangeStock
	12, // 16: market.mass.Event.new_key_card:type_name -> market.mass.NewKeyCard
	34, // 17: market.mass.AuthenticateResponse.error:type_name -> market.mass.Error
	34, // 18: market.mass.ChallengeSolvedResponse.error:type_name -> market.mass.Error
	34, // 19: market.mass.CommitCartResponse.error:type_name -> market.mass.Error
	34, // 20: market.mass.GetBlobUploadURLResponse.error:type_name -> market.mass.Error
	17, // 21: market.mass.EventWriteRequest.event:type_name -> market.mass.Event
	34, // 22: market.mass.EventWriteResponse.error:type_name -> market.mass.Error
	34, // 23: market.mass.SyncStatusResponse.error:type_name -> market.mass.Error
	17, // 24: market.mass.EventPushRequest.events:type_name -> market.mass.Event
	34, // 25: market.mass.EventPushResponse.error:type_name -> market.mass.Error
	34, // 26: market.mass.PingResponse.error:type_name -> market.mass.Error
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_network_schema_proto_init() }
func file_network_schema_proto_init() {
	if File_network_schema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_network_schema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddToTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFromTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewKeyCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeCart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartFinalized); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartAbandoned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeSolvedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeSolvedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitCartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitCartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlobUploadURLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlobUploadURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventWriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventWriteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPushRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPushResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_network_schema_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_network_schema_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*UpdateManifest_String_)(nil),
		(*UpdateManifest_TagId)(nil),
		(*UpdateManifest_Erc20Addr)(nil),
	}
	file_network_schema_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*UpdateItem_Price)(nil),
		(*UpdateItem_Metadata)(nil),
	}
	file_network_schema_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*Event_StoreManifest)(nil),
		(*Event_UpdateManifest)(nil),
		(*Event_CreateItem)(nil),
		(*Event_UpdateItem)(nil),
		(*Event_CreateTag)(nil),
		(*Event_AddToTag)(nil),
		(*Event_RemoveFromTag)(nil),
		(*Event_RenameTag)(nil),
		(*Event_DeleteTag)(nil),
		(*Event_CreateCart)(nil),
		(*Event_ChangeCart)(nil),
		(*Event_CartFinalized)(nil),
		(*Event_CartAbandoned)(nil),
		(*Event_ChangeStock)(nil),
		(*Event_NewKeyCard)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_network_schema_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_network_schema_proto_goTypes,
		DependencyIndexes: file_network_schema_proto_depIdxs,
		EnumInfos:         file_network_schema_proto_enumTypes,
		MessageInfos:      file_network_schema_proto_msgTypes,
	}.Build()
	File_network_schema_proto = out.File
	file_network_schema_proto_rawDesc = nil
	file_network_schema_proto_goTypes = nil
	file_network_schema_proto_depIdxs = nil
}
