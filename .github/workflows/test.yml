# SPDX-FileCopyrightText: 2024 - 2025 Mass Labs
#
# SPDX-License-Identifier: GPL-3.0-or-later

name: test

on: [push]

env:
  PGUSER: postgres
  PGPASSWORD: postgres
  PGHOST: localhost
  PGPORT: 5432

jobs:
  relay-tests:
    runs-on: [self-hosted, linux]
    # TODO: kludge until we figured out why pytest sometimes doesnt exit when tests fail
    timeout-minutes: 20

    permissions:
      contents: read
      pull-requests: write

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      ipfs:
        image: cryptix/ipfs-offline:v1
        ports:
          - 5001:5001

    steps:
      - uses: actions/checkout@v4
        with:
          path: relay

      # not needed on self-hosted but kept around if we want to use it on github-hosted
      #- name: Install Nix
      #  uses: DeterminateSystems/nix-installer-action@main
      #- uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: DeterminateSystems/flake-checker-action@main
        with:
          flake-lock-path: relay/flake.lock

      - name: Compile / smoke test relay
        run: nix build '.#relay'
        working-directory: relay

      # relay builds => run tests

      - name: Extract branches
        shell: bash
        run: |
          echo "relay_pr=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: branches

      - name: build ABIs and deploy market contracts
        run: nix develop -c local-testnet -D
        working-directory: relay

      - name: git clone pystoretest
        uses: ./relay/.github/actions/checkout
        with:
          repository: masslbs/pystoretest
          path: pystoretest
          ref: ${{ steps.branches.outputs.relay_pr }}

      - name: prepare env file for relay
        run: |
          cp .env.sample .env
          sed -i 's|PORT=4444|PORT=3434|' .env
          sed -i 's|localhost:4444|localhost:3434|' .env
          echo "KICK_TIMEOUT=15s" >> .env
          echo "PING_INTERVAL=5s" >> .env
          echo "ETH_BLOCK_INTERVAL=1s" >> .env
          cat .env
        working-directory: relay

      - name: prepare env file for pystoretest
        run: |
          cp .env.sample .env
          sed -i 's|localhost:4444|localhost:3434|' .env
          cat .env
        working-directory: pystoretest

      - name: initdb and start relay
        run: |
          createdb massmarket-relay-test
          psql massmarket-relay-test < ./db/schema.sql
          export $(egrep -v '^#' .env | xargs)
          ./result/bin/relay server > relay.log &
        working-directory: relay

      - name: check services
        run: |
          set -e
          curl http://localhost:3434/health
          curl http://localhost:5001/api/v0/version -X POST
          curl http://localhost:8545/ -X POST -H 'content-type: application/json' --data-raw '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":0}'

      # test VM has 6 cores so we spare one for the relay and docker services
      - name: Run tests
        run: nix develop -c pytest -x -vv -n 5 --benchmark-skip
        working-directory: pystoretest

      - name: Run benchmarks
        if: runner.name == 'ci-runner2'
        run: nix develop -c pytest --benchmark-only --benchmark-json ../bench-output.json
        working-directory: pystoretest

      # TODO: compare against previous run
      - name: Post benchmark results
        if: runner.name == 'ci-runner2'
        run: |
          BENCHMARK_SUMMARY=$(jq -r '
          "## Benchmark Results\n\n" +
          "| Test Name | Mean (s) | Median (s) | Min (s) | Max (s) | Stddev (s) | Ops/sec |\n" +
          "|-----------|----------|------------|---------|---------|------------|---------|\n" +
          (.benchmarks | to_entries | map(
            "| \(.value.name) | \(.value.stats.mean | tostring | .[0:8]) | \(.value.stats.median | tostring | .[0:8]) | \(.value.stats.min | tostring | .[0:8]) | \(.value.stats.max | tostring | .[0:8]) | \(.value.stats.stddev | tostring | .[0:8]) | \(.value.stats.ops | tostring | .[0:8]) |"
          ) | join("\n")) +
          "\n\n### Commit Info\n" +
          "- **Commit:** \(.commit_info.id)\n" +
          "- **Time:** \(.commit_info.time)\n"
          ' ../bench-output.json)
          echo "$BENCHMARK_SUMMARY" >> $GITHUB_STEP_SUMMARY
        working-directory: relay

      - name: Upload relay log on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: relay-log.txt
          path: relay/relay.log
