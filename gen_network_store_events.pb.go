// Generated from /nix/store/g79bbb5qkas2jrj94iz414h445vg5av7-source/network-schema/store_events.proto at version v2 (2e3d27ecfc5a19681af710e2ec288709139e19bc)

// SPDX-FileCopyrightText: 2024 Mass Labs
//
// SPDX-License-Identifier: GPL-3.0-or-later
// SPDX-License-Identifier: MIT

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: store_events.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// for now we assume the owner can't be changed
type UpdateStoreManifest_ManifestField int32

const (
	// needed as a side-effect of what protobuf calls "open enums"
	UpdateStoreManifest_MANIFEST_FIELD_UNSPECIFIED   UpdateStoreManifest_ManifestField = 0
	UpdateStoreManifest_MANIFEST_FIELD_DOMAIN        UpdateStoreManifest_ManifestField = 1 // uses value:3 (type string)
	UpdateStoreManifest_MANIFEST_FIELD_PUBLISHED_TAG UpdateStoreManifest_ManifestField = 2 // uses value:4 (type event_id)
	UpdateStoreManifest_MANIFEST_FIELD_ADD_ERC20     UpdateStoreManifest_ManifestField = 3 // add uses value:5 (addrress)
	UpdateStoreManifest_MANIFEST_FIELD_REMOVE_ERC20  UpdateStoreManifest_ManifestField = 4 // uses value:5 (address)
)

// Enum value maps for UpdateStoreManifest_ManifestField.
var (
	UpdateStoreManifest_ManifestField_name = map[int32]string{
		0: "MANIFEST_FIELD_UNSPECIFIED",
		1: "MANIFEST_FIELD_DOMAIN",
		2: "MANIFEST_FIELD_PUBLISHED_TAG",
		3: "MANIFEST_FIELD_ADD_ERC20",
		4: "MANIFEST_FIELD_REMOVE_ERC20",
	}
	UpdateStoreManifest_ManifestField_value = map[string]int32{
		"MANIFEST_FIELD_UNSPECIFIED":   0,
		"MANIFEST_FIELD_DOMAIN":        1,
		"MANIFEST_FIELD_PUBLISHED_TAG": 2,
		"MANIFEST_FIELD_ADD_ERC20":     3,
		"MANIFEST_FIELD_REMOVE_ERC20":  4,
	}
)

func (x UpdateStoreManifest_ManifestField) Enum() *UpdateStoreManifest_ManifestField {
	p := new(UpdateStoreManifest_ManifestField)
	*p = x
	return p
}

func (x UpdateStoreManifest_ManifestField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateStoreManifest_ManifestField) Descriptor() protoreflect.EnumDescriptor {
	return file_store_events_proto_enumTypes[0].Descriptor()
}

func (UpdateStoreManifest_ManifestField) Type() protoreflect.EnumType {
	return &file_store_events_proto_enumTypes[0]
}

func (x UpdateStoreManifest_ManifestField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateStoreManifest_ManifestField.Descriptor instead.
func (UpdateStoreManifest_ManifestField) EnumDescriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{1, 0}
}

type UpdateItem_ItemField int32

const (
	UpdateItem_ITEM_FIELD_UNSPECIFIED UpdateItem_ItemField = 0
	UpdateItem_ITEM_FIELD_PRICE       UpdateItem_ItemField = 1
	UpdateItem_ITEM_FIELD_METADATA    UpdateItem_ItemField = 2
)

// Enum value maps for UpdateItem_ItemField.
var (
	UpdateItem_ItemField_name = map[int32]string{
		0: "ITEM_FIELD_UNSPECIFIED",
		1: "ITEM_FIELD_PRICE",
		2: "ITEM_FIELD_METADATA",
	}
	UpdateItem_ItemField_value = map[string]int32{
		"ITEM_FIELD_UNSPECIFIED": 0,
		"ITEM_FIELD_PRICE":       1,
		"ITEM_FIELD_METADATA":    2,
	}
)

func (x UpdateItem_ItemField) Enum() *UpdateItem_ItemField {
	p := new(UpdateItem_ItemField)
	*p = x
	return p
}

func (x UpdateItem_ItemField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateItem_ItemField) Descriptor() protoreflect.EnumDescriptor {
	return file_store_events_proto_enumTypes[1].Descriptor()
}

func (UpdateItem_ItemField) Type() protoreflect.EnumType {
	return &file_store_events_proto_enumTypes[1]
}

func (x UpdateItem_ItemField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateItem_ItemField.Descriptor instead.
func (UpdateItem_ItemField) EnumDescriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{3, 0}
}

type UpdateTag_TagAction int32

const (
	UpdateTag_TAG_ACTION_UNSPECIFIED UpdateTag_TagAction = 0
	UpdateTag_TAG_ACTION_ADD_ITEM    UpdateTag_TagAction = 1
	UpdateTag_TAG_ACTION_REMOVE_ITEM UpdateTag_TagAction = 2
	UpdateTag_TAG_ACTION_RENAME      UpdateTag_TagAction = 3
	UpdateTag_TAG_ACTION_DELETE_TAG  UpdateTag_TagAction = 4
)

// Enum value maps for UpdateTag_TagAction.
var (
	UpdateTag_TagAction_name = map[int32]string{
		0: "TAG_ACTION_UNSPECIFIED",
		1: "TAG_ACTION_ADD_ITEM",
		2: "TAG_ACTION_REMOVE_ITEM",
		3: "TAG_ACTION_RENAME",
		4: "TAG_ACTION_DELETE_TAG",
	}
	UpdateTag_TagAction_value = map[string]int32{
		"TAG_ACTION_UNSPECIFIED": 0,
		"TAG_ACTION_ADD_ITEM":    1,
		"TAG_ACTION_REMOVE_ITEM": 2,
		"TAG_ACTION_RENAME":      3,
		"TAG_ACTION_DELETE_TAG":  4,
	}
)

func (x UpdateTag_TagAction) Enum() *UpdateTag_TagAction {
	p := new(UpdateTag_TagAction)
	*p = x
	return p
}

func (x UpdateTag_TagAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateTag_TagAction) Descriptor() protoreflect.EnumDescriptor {
	return file_store_events_proto_enumTypes[2].Descriptor()
}

func (UpdateTag_TagAction) Type() protoreflect.EnumType {
	return &file_store_events_proto_enumTypes[2]
}

func (x UpdateTag_TagAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateTag_TagAction.Descriptor instead.
func (UpdateTag_TagAction) EnumDescriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{5, 0}
}

// First genisis message of a store.
// Has to be the first message that is written and can only be written once.
// Use UpdateStoreManifest to make changes.
type StoreManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The event_id is a unique identifier for an event.
	// Currently it's 32 bytes of random data.
	// It also functions as a nonce for The events signature.
	// The global identifier of an Item should also include the store_token_id.
	// hash(store_token_id:signature) might suffice then with a smaller nonce.
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// The NFT Token ID used in StoreReg.registerStore().
	// Checkout will ownerOf() this to determine the addr for PurchaseFactory.
	StoreTokenId []byte `protobuf:"bytes,2,opt,name=store_token_id,json=storeTokenId,proto3" json:"store_token_id,omitempty"`
	// Website URL of the store
	// TODO: might change this to metdata inside the NFT URL.
	Domain string `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	// the system tag used to list active items
	PublishedTagId []byte `protobuf:"bytes,4,opt,name=published_tag_id,json=publishedTagId,proto3" json:"published_tag_id,omitempty"`
}

func (x *StoreManifest) Reset() {
	*x = StoreManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreManifest) ProtoMessage() {}

func (x *StoreManifest) ProtoReflect() protoreflect.Message {
	mi := &file_store_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreManifest.ProtoReflect.Descriptor instead.
func (*StoreManifest) Descriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{0}
}

func (x *StoreManifest) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *StoreManifest) GetStoreTokenId() []byte {
	if x != nil {
		return x.StoreTokenId
	}
	return nil
}

func (x *StoreManifest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *StoreManifest) GetPublishedTagId() []byte {
	if x != nil {
		return x.PublishedTagId
	}
	return nil
}

// Used to update the store manifest.
// The Field enum determines the field to be updated and the value to be used.
type UpdateStoreManifest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// Defines the field to be updated and determines the value to be used.
	Field UpdateStoreManifest_ManifestField `protobuf:"varint,2,opt,name=field,proto3,enum=market.mass.UpdateStoreManifest_ManifestField" json:"field,omitempty"`
	// Types that are assignable to Value:
	//
	//	*UpdateStoreManifest_String_
	//	*UpdateStoreManifest_TagId
	//	*UpdateStoreManifest_Erc20Addr
	Value isUpdateStoreManifest_Value `protobuf_oneof:"value"`
}

func (x *UpdateStoreManifest) Reset() {
	*x = UpdateStoreManifest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoreManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoreManifest) ProtoMessage() {}

func (x *UpdateStoreManifest) ProtoReflect() protoreflect.Message {
	mi := &file_store_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoreManifest.ProtoReflect.Descriptor instead.
func (*UpdateStoreManifest) Descriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateStoreManifest) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *UpdateStoreManifest) GetField() UpdateStoreManifest_ManifestField {
	if x != nil {
		return x.Field
	}
	return UpdateStoreManifest_MANIFEST_FIELD_UNSPECIFIED
}

func (m *UpdateStoreManifest) GetValue() isUpdateStoreManifest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *UpdateStoreManifest) GetString_() string {
	if x, ok := x.GetValue().(*UpdateStoreManifest_String_); ok {
		return x.String_
	}
	return ""
}

func (x *UpdateStoreManifest) GetTagId() []byte {
	if x, ok := x.GetValue().(*UpdateStoreManifest_TagId); ok {
		return x.TagId
	}
	return nil
}

func (x *UpdateStoreManifest) GetErc20Addr() []byte {
	if x, ok := x.GetValue().(*UpdateStoreManifest_Erc20Addr); ok {
		return x.Erc20Addr
	}
	return nil
}

type isUpdateStoreManifest_Value interface {
	isUpdateStoreManifest_Value()
}

type UpdateStoreManifest_String_ struct {
	String_ string `protobuf:"bytes,3,opt,name=string,proto3,oneof"`
}

type UpdateStoreManifest_TagId struct {
	TagId []byte `protobuf:"bytes,4,opt,name=tag_id,json=tagId,proto3,oneof"` // See event_id for details
}

type UpdateStoreManifest_Erc20Addr struct {
	Erc20Addr []byte `protobuf:"bytes,5,opt,name=erc20_addr,json=erc20Addr,proto3,oneof"` // 20 bytes
}

func (*UpdateStoreManifest_String_) isUpdateStoreManifest_Value() {}

func (*UpdateStoreManifest_TagId) isUpdateStoreManifest_Value() {}

func (*UpdateStoreManifest_Erc20Addr) isUpdateStoreManifest_Value() {}

// Creates an item in the store.
type CreateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// decimal number as a string.
	// numbers need to be always formatted to 2 decimal places.
	// the demcimal place must use a dot ('.') as the separator.
	Price string `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	// should be valid JSON
	// TODO: make a json schmea with minimal/required fields
	Metadata []byte `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *CreateItem) Reset() {
	*x = CreateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateItem) ProtoMessage() {}

func (x *CreateItem) ProtoReflect() protoreflect.Message {
	mi := &file_store_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateItem.ProtoReflect.Descriptor instead.
func (*CreateItem) Descriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{2}
}

func (x *CreateItem) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *CreateItem) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CreateItem) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// UpdateItem changes the price or metadata of an item.
// Follows the same pattern as UpdateManifest.
type UpdateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte               `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	ItemId  []byte               `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"` // the event_id of the CreateItem event
	Field   UpdateItem_ItemField `protobuf:"varint,3,opt,name=field,proto3,enum=market.mass.UpdateItem_ItemField" json:"field,omitempty"`
	// Types that are assignable to Value:
	//
	//	*UpdateItem_Price
	//	*UpdateItem_Metadata
	Value isUpdateItem_Value `protobuf_oneof:"value"`
}

func (x *UpdateItem) Reset() {
	*x = UpdateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateItem) ProtoMessage() {}

func (x *UpdateItem) ProtoReflect() protoreflect.Message {
	mi := &file_store_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateItem.ProtoReflect.Descriptor instead.
func (*UpdateItem) Descriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateItem) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *UpdateItem) GetItemId() []byte {
	if x != nil {
		return x.ItemId
	}
	return nil
}

func (x *UpdateItem) GetField() UpdateItem_ItemField {
	if x != nil {
		return x.Field
	}
	return UpdateItem_ITEM_FIELD_UNSPECIFIED
}

func (m *UpdateItem) GetValue() isUpdateItem_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *UpdateItem) GetPrice() string {
	if x, ok := x.GetValue().(*UpdateItem_Price); ok {
		return x.Price
	}
	return ""
}

func (x *UpdateItem) GetMetadata() []byte {
	if x, ok := x.GetValue().(*UpdateItem_Metadata); ok {
		return x.Metadata
	}
	return nil
}

type isUpdateItem_Value interface {
	isUpdateItem_Value()
}

type UpdateItem_Price struct {
	Price string `protobuf:"bytes,4,opt,name=price,proto3,oneof"` // decimal number. See CreateItem for formatting.
}

type UpdateItem_Metadata struct {
	Metadata []byte `protobuf:"bytes,5,opt,name=metadata,proto3,oneof"`
}

func (*UpdateItem_Price) isUpdateItem_Value() {}

func (*UpdateItem_Metadata) isUpdateItem_Value() {}

// Creates a tag in the store.
// These can be used to group items into categories.
// There are also a couple of system-level tags, like published.
// Thse are used to filter items in the store.
type CreateTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateTag) Reset() {
	*x = CreateTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTag) ProtoMessage() {}

func (x *CreateTag) ProtoReflect() protoreflect.Message {
	mi := &file_store_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTag.ProtoReflect.Descriptor instead.
func (*CreateTag) Descriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTag) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *CreateTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte              `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TagId   []byte              `protobuf:"bytes,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Action  UpdateTag_TagAction `protobuf:"varint,3,opt,name=action,proto3,enum=market.mass.UpdateTag_TagAction" json:"action,omitempty"`
	// Types that are assignable to Value:
	//
	//	*UpdateTag_ItemId
	//	*UpdateTag_NewName
	//	*UpdateTag_Delete
	Value isUpdateTag_Value `protobuf_oneof:"value"`
}

func (x *UpdateTag) Reset() {
	*x = UpdateTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTag) ProtoMessage() {}

func (x *UpdateTag) ProtoReflect() protoreflect.Message {
	mi := &file_store_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTag.ProtoReflect.Descriptor instead.
func (*UpdateTag) Descriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTag) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *UpdateTag) GetTagId() []byte {
	if x != nil {
		return x.TagId
	}
	return nil
}

func (x *UpdateTag) GetAction() UpdateTag_TagAction {
	if x != nil {
		return x.Action
	}
	return UpdateTag_TAG_ACTION_UNSPECIFIED
}

func (m *UpdateTag) GetValue() isUpdateTag_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *UpdateTag) GetItemId() []byte {
	if x, ok := x.GetValue().(*UpdateTag_ItemId); ok {
		return x.ItemId
	}
	return nil
}

func (x *UpdateTag) GetNewName() string {
	if x, ok := x.GetValue().(*UpdateTag_NewName); ok {
		return x.NewName
	}
	return ""
}

func (x *UpdateTag) GetDelete() bool {
	if x, ok := x.GetValue().(*UpdateTag_Delete); ok {
		return x.Delete
	}
	return false
}

type isUpdateTag_Value interface {
	isUpdateTag_Value()
}

type UpdateTag_ItemId struct {
	ItemId []byte `protobuf:"bytes,4,opt,name=item_id,json=itemId,proto3,oneof"`
}

type UpdateTag_NewName struct {
	NewName string `protobuf:"bytes,5,opt,name=new_name,json=newName,proto3,oneof"`
}

type UpdateTag_Delete struct {
	Delete bool `protobuf:"varint,6,opt,name=delete,proto3,oneof"`
}

func (*UpdateTag_ItemId) isUpdateTag_Value() {}

func (*UpdateTag_NewName) isUpdateTag_Value() {}

func (*UpdateTag_Delete) isUpdateTag_Value() {}

// ChangeStock is used to update the stock of on or more items.
// Created by the relay after a cart has been paied for.
type ChangeStock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// length needs to match the length of the diff field
	ItemIds [][]byte `protobuf:"bytes,2,rep,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
	Diffs   []int32  `protobuf:"zigzag32,3,rep,packed,name=diffs,proto3" json:"diffs,omitempty"`
	// (optional) only set by the relay.
	// signals payment completion after a CommitCartRequest
	CartId []byte `protobuf:"bytes,4,opt,name=cart_id,json=cartId,proto3" json:"cart_id,omitempty"`
	TxHash []byte `protobuf:"bytes,5,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *ChangeStock) Reset() {
	*x = ChangeStock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeStock) ProtoMessage() {}

func (x *ChangeStock) ProtoReflect() protoreflect.Message {
	mi := &file_store_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeStock.ProtoReflect.Descriptor instead.
func (*ChangeStock) Descriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{6}
}

func (x *ChangeStock) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *ChangeStock) GetItemIds() [][]byte {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

func (x *ChangeStock) GetDiffs() []int32 {
	if x != nil {
		return x.Diffs
	}
	return nil
}

func (x *ChangeStock) GetCartId() []byte {
	if x != nil {
		return x.CartId
	}
	return nil
}

func (x *ChangeStock) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

// created by the relay when a user enrolls a key card
type NewKeyCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId        []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	UserWalletAddr []byte `protobuf:"bytes,2,opt,name=user_wallet_addr,json=userWalletAddr,proto3" json:"user_wallet_addr,omitempty"`
	CardPublicKey  []byte `protobuf:"bytes,3,opt,name=card_public_key,json=cardPublicKey,proto3" json:"card_public_key,omitempty"`
}

func (x *NewKeyCard) Reset() {
	*x = NewKeyCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewKeyCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewKeyCard) ProtoMessage() {}

func (x *NewKeyCard) ProtoReflect() protoreflect.Message {
	mi := &file_store_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewKeyCard.ProtoReflect.Descriptor instead.
func (*NewKeyCard) Descriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{7}
}

func (x *NewKeyCard) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *NewKeyCard) GetUserWalletAddr() []byte {
	if x != nil {
		return x.UserWalletAddr
	}
	return nil
}

func (x *NewKeyCard) GetCardPublicKey() []byte {
	if x != nil {
		return x.CardPublicKey
	}
	return nil
}

// CreateCart is used to create a new cart.
type CreateCart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
}

func (x *CreateCart) Reset() {
	*x = CreateCart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCart) ProtoMessage() {}

func (x *CreateCart) ProtoReflect() protoreflect.Message {
	mi := &file_store_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCart.ProtoReflect.Descriptor instead.
func (*CreateCart) Descriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{8}
}

func (x *CreateCart) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

// ChangeCart is used to add or remove items from a cart.
type ChangeCart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId  []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	CartId   []byte `protobuf:"bytes,2,opt,name=cart_id,json=cartId,proto3" json:"cart_id,omitempty"`
	ItemId   []byte `protobuf:"bytes,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Quantity int32  `protobuf:"zigzag32,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ChangeCart) Reset() {
	*x = ChangeCart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeCart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeCart) ProtoMessage() {}

func (x *ChangeCart) ProtoReflect() protoreflect.Message {
	mi := &file_store_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeCart.ProtoReflect.Descriptor instead.
func (*ChangeCart) Descriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{9}
}

func (x *ChangeCart) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *ChangeCart) GetCartId() []byte {
	if x != nil {
		return x.CartId
	}
	return nil
}

func (x *ChangeCart) GetItemId() []byte {
	if x != nil {
		return x.ItemId
	}
	return nil
}

func (x *ChangeCart) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

// Created by the relay after a CommitCartRequest.
// It signals that a cart is about to be payed and can not be changed anymore.
type CartFinalized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	CartId  []byte `protobuf:"bytes,2,opt,name=cart_id,json=cartId,proto3" json:"cart_id,omitempty"`
	// the address the user needs to send the funds to
	PurchaseAddr []byte `protobuf:"bytes,3,opt,name=purchase_addr,json=purchaseAddr,proto3" json:"purchase_addr,omitempty"`
	// (optional) copied from CommitCartRequest
	Erc20Addr []byte `protobuf:"bytes,8,opt,name=erc20_addr,json=erc20Addr,proto3" json:"erc20_addr,omitempty"`
	SubTotal  string `protobuf:"bytes,4,opt,name=sub_total,json=subTotal,proto3" json:"sub_total,omitempty"`
	SalesTax  string `protobuf:"bytes,5,opt,name=sales_tax,json=salesTax,proto3" json:"sales_tax,omitempty"`
	Total     string `protobuf:"bytes,6,opt,name=total,proto3" json:"total,omitempty"` // = subtotal + sales_tax
	// The exact amount to transfer to the purchase_address.
	// bigint as string.
	TotalInCrypto string `protobuf:"bytes,7,opt,name=total_in_crypto,json=totalInCrypto,proto3" json:"total_in_crypto,omitempty"`
}

func (x *CartFinalized) Reset() {
	*x = CartFinalized{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartFinalized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartFinalized) ProtoMessage() {}

func (x *CartFinalized) ProtoReflect() protoreflect.Message {
	mi := &file_store_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartFinalized.ProtoReflect.Descriptor instead.
func (*CartFinalized) Descriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{10}
}

func (x *CartFinalized) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *CartFinalized) GetCartId() []byte {
	if x != nil {
		return x.CartId
	}
	return nil
}

func (x *CartFinalized) GetPurchaseAddr() []byte {
	if x != nil {
		return x.PurchaseAddr
	}
	return nil
}

func (x *CartFinalized) GetErc20Addr() []byte {
	if x != nil {
		return x.Erc20Addr
	}
	return nil
}

func (x *CartFinalized) GetSubTotal() string {
	if x != nil {
		return x.SubTotal
	}
	return ""
}

func (x *CartFinalized) GetSalesTax() string {
	if x != nil {
		return x.SalesTax
	}
	return ""
}

func (x *CartFinalized) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *CartFinalized) GetTotalInCrypto() string {
	if x != nil {
		return x.TotalInCrypto
	}
	return ""
}

// Either created by a relay for a carts that haven't been payed in time.
// Or by a clerk, for eg. when the customer steps back from the purchase.
// This frees up the items locked up in the finalized cart.
type CartAbandoned struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See StoreManifest for details
	EventId []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	CartId  []byte `protobuf:"bytes,2,opt,name=cart_id,json=cartId,proto3" json:"cart_id,omitempty"`
}

func (x *CartAbandoned) Reset() {
	*x = CartAbandoned{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartAbandoned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartAbandoned) ProtoMessage() {}

func (x *CartAbandoned) ProtoReflect() protoreflect.Message {
	mi := &file_store_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartAbandoned.ProtoReflect.Descriptor instead.
func (*CartAbandoned) Descriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{11}
}

func (x *CartAbandoned) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *CartAbandoned) GetCartId() []byte {
	if x != nil {
		return x.CartId
	}
	return nil
}

// StoreEvent is the transport wrapper for a single event in a store.
//
// For signatures we use https://eips.ethereum.org/EIPS/eip-712.
// The structured data definition are specified in `typedData.json`.
// The KeyCard keypair is used to sign or verify the data.
// The Set of all valid keys is all NewKeyCard events
// plus the Relays assigned on the StoreReg smart contract.
//
// Special care must be taken for Events with optional and union fields.
// Specifically these are `UpdateManifest`, `UpdateItem` and `ChangeStock`.
// Some implementations of `eth_signTypedData` are fine with `null` fields,
// while others aren't.
// Therefore, the structured data specification
// needs to be pruned from fields that are not set.
type StoreEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// use ecrecover() to extract the keycard that created the event
	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// Types that are assignable to Union:
	//
	//	*StoreEvent_StoreManifest
	//	*StoreEvent_UpdateStoreManifest
	//	*StoreEvent_CreateItem
	//	*StoreEvent_UpdateItem
	//	*StoreEvent_CreateTag
	//	*StoreEvent_UpdateTag
	//	*StoreEvent_CreateCart
	//	*StoreEvent_ChangeCart
	//	*StoreEvent_CartFinalized
	//	*StoreEvent_CartAbandoned
	//	*StoreEvent_ChangeStock
	//	*StoreEvent_NewKeyCard
	Union isStoreEvent_Union `protobuf_oneof:"union"`
}

func (x *StoreEvent) Reset() {
	*x = StoreEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_events_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreEvent) ProtoMessage() {}

func (x *StoreEvent) ProtoReflect() protoreflect.Message {
	mi := &file_store_events_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreEvent.ProtoReflect.Descriptor instead.
func (*StoreEvent) Descriptor() ([]byte, []int) {
	return file_store_events_proto_rawDescGZIP(), []int{12}
}

func (x *StoreEvent) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (m *StoreEvent) GetUnion() isStoreEvent_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *StoreEvent) GetStoreManifest() *StoreManifest {
	if x, ok := x.GetUnion().(*StoreEvent_StoreManifest); ok {
		return x.StoreManifest
	}
	return nil
}

func (x *StoreEvent) GetUpdateStoreManifest() *UpdateStoreManifest {
	if x, ok := x.GetUnion().(*StoreEvent_UpdateStoreManifest); ok {
		return x.UpdateStoreManifest
	}
	return nil
}

func (x *StoreEvent) GetCreateItem() *CreateItem {
	if x, ok := x.GetUnion().(*StoreEvent_CreateItem); ok {
		return x.CreateItem
	}
	return nil
}

func (x *StoreEvent) GetUpdateItem() *UpdateItem {
	if x, ok := x.GetUnion().(*StoreEvent_UpdateItem); ok {
		return x.UpdateItem
	}
	return nil
}

func (x *StoreEvent) GetCreateTag() *CreateTag {
	if x, ok := x.GetUnion().(*StoreEvent_CreateTag); ok {
		return x.CreateTag
	}
	return nil
}

func (x *StoreEvent) GetUpdateTag() *UpdateTag {
	if x, ok := x.GetUnion().(*StoreEvent_UpdateTag); ok {
		return x.UpdateTag
	}
	return nil
}

func (x *StoreEvent) GetCreateCart() *CreateCart {
	if x, ok := x.GetUnion().(*StoreEvent_CreateCart); ok {
		return x.CreateCart
	}
	return nil
}

func (x *StoreEvent) GetChangeCart() *ChangeCart {
	if x, ok := x.GetUnion().(*StoreEvent_ChangeCart); ok {
		return x.ChangeCart
	}
	return nil
}

func (x *StoreEvent) GetCartFinalized() *CartFinalized {
	if x, ok := x.GetUnion().(*StoreEvent_CartFinalized); ok {
		return x.CartFinalized
	}
	return nil
}

func (x *StoreEvent) GetCartAbandoned() *CartAbandoned {
	if x, ok := x.GetUnion().(*StoreEvent_CartAbandoned); ok {
		return x.CartAbandoned
	}
	return nil
}

func (x *StoreEvent) GetChangeStock() *ChangeStock {
	if x, ok := x.GetUnion().(*StoreEvent_ChangeStock); ok {
		return x.ChangeStock
	}
	return nil
}

func (x *StoreEvent) GetNewKeyCard() *NewKeyCard {
	if x, ok := x.GetUnion().(*StoreEvent_NewKeyCard); ok {
		return x.NewKeyCard
	}
	return nil
}

type isStoreEvent_Union interface {
	isStoreEvent_Union()
}

type StoreEvent_StoreManifest struct {
	StoreManifest *StoreManifest `protobuf:"bytes,2,opt,name=store_manifest,json=storeManifest,proto3,oneof"`
}

type StoreEvent_UpdateStoreManifest struct {
	UpdateStoreManifest *UpdateStoreManifest `protobuf:"bytes,3,opt,name=update_store_manifest,json=updateStoreManifest,proto3,oneof"`
}

type StoreEvent_CreateItem struct {
	CreateItem *CreateItem `protobuf:"bytes,4,opt,name=create_item,json=createItem,proto3,oneof"`
}

type StoreEvent_UpdateItem struct {
	UpdateItem *UpdateItem `protobuf:"bytes,5,opt,name=update_item,json=updateItem,proto3,oneof"`
}

type StoreEvent_CreateTag struct {
	CreateTag *CreateTag `protobuf:"bytes,6,opt,name=create_tag,json=createTag,proto3,oneof"`
}

type StoreEvent_UpdateTag struct {
	UpdateTag *UpdateTag `protobuf:"bytes,7,opt,name=update_tag,json=updateTag,proto3,oneof"`
}

type StoreEvent_CreateCart struct {
	// TODO: shoul it be UpdateCart?
	CreateCart *CreateCart `protobuf:"bytes,8,opt,name=create_cart,json=createCart,proto3,oneof"`
}

type StoreEvent_ChangeCart struct {
	ChangeCart *ChangeCart `protobuf:"bytes,9,opt,name=change_cart,json=changeCart,proto3,oneof"`
}

type StoreEvent_CartFinalized struct {
	CartFinalized *CartFinalized `protobuf:"bytes,10,opt,name=cart_finalized,json=cartFinalized,proto3,oneof"`
}

type StoreEvent_CartAbandoned struct {
	CartAbandoned *CartAbandoned `protobuf:"bytes,11,opt,name=cart_abandoned,json=cartAbandoned,proto3,oneof"`
}

type StoreEvent_ChangeStock struct {
	ChangeStock *ChangeStock `protobuf:"bytes,12,opt,name=change_stock,json=changeStock,proto3,oneof"`
}

type StoreEvent_NewKeyCard struct {
	NewKeyCard *NewKeyCard `protobuf:"bytes,13,opt,name=new_key_card,json=newKeyCard,proto3,oneof"`
}

func (*StoreEvent_StoreManifest) isStoreEvent_Union() {}

func (*StoreEvent_UpdateStoreManifest) isStoreEvent_Union() {}

func (*StoreEvent_CreateItem) isStoreEvent_Union() {}

func (*StoreEvent_UpdateItem) isStoreEvent_Union() {}

func (*StoreEvent_CreateTag) isStoreEvent_Union() {}

func (*StoreEvent_UpdateTag) isStoreEvent_Union() {}

func (*StoreEvent_CreateCart) isStoreEvent_Union() {}

func (*StoreEvent_ChangeCart) isStoreEvent_Union() {}

func (*StoreEvent_CartFinalized) isStoreEvent_Union() {}

func (*StoreEvent_CartAbandoned) isStoreEvent_Union() {}

func (*StoreEvent_ChangeStock) isStoreEvent_Union() {}

func (*StoreEvent_NewKeyCard) isStoreEvent_Union() {}

var File_store_events_proto protoreflect.FileDescriptor

var file_store_events_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x22, 0x92, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x28, 0x0a, 0x10,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x54, 0x61, 0x67, 0x49, 0x64, 0x22, 0x81, 0x03, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x06, 0x74, 0x61, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x74, 0x61, 0x67,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x65, 0x72, 0x63, 0x32, 0x30, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x65, 0x72, 0x63, 0x32, 0x30, 0x41,
	0x64, 0x64, 0x72, 0x22, 0xab, 0x01, 0x0a, 0x0d, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x41, 0x4e, 0x49, 0x46, 0x45, 0x53,
	0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x4e, 0x49, 0x46, 0x45, 0x53,
	0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x10, 0x01,
	0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x41, 0x4e, 0x49, 0x46, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x49, 0x45,
	0x4c, 0x44, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x5f, 0x54, 0x41, 0x47,
	0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x41, 0x4e, 0x49, 0x46, 0x45, 0x53, 0x54, 0x5f, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x45, 0x52, 0x43, 0x32, 0x30, 0x10, 0x03,
	0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x41, 0x4e, 0x49, 0x46, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x49, 0x45,
	0x4c, 0x44, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x45, 0x52, 0x43, 0x32, 0x30, 0x10,
	0x04, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x59, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x90, 0x02, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x12, 0x16, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x56, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x46, 0x49, 0x45,
	0x4c, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x50,
	0x52, 0x49, 0x43, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x10, 0x02, 0x42,
	0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3a, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe3, 0x02, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74,
	0x61, 0x67, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61,
	0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x2e, 0x54, 0x61, 0x67,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x08, 0x6e, 0x65, 0x77,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6e,
	0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x22, 0x8e, 0x01, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x16, 0x54, 0x41, 0x47, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x41,
	0x47, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x49, 0x54, 0x45,
	0x4d, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x41, 0x47, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x12,
	0x15, 0x0a, 0x11, 0x54, 0x41, 0x47, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45,
	0x4e, 0x41, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x41, 0x47, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x54, 0x41, 0x47, 0x10,
	0x04, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x69, 0x66, 0x66, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x11, 0x52,
	0x05, 0x64, 0x69, 0x66, 0x66, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x22, 0x79, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x4b,
	0x65, 0x79, 0x43, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x75, 0x73, 0x65,
	0x72, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x22, 0x27, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x0a,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x11, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0xff, 0x01, 0x0a, 0x0d, 0x43, 0x61, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x63, 0x32, 0x30, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x65, 0x72, 0x63, 0x32, 0x30, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x5f, 0x74, 0x61, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x54, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a,
	0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x0d, 0x43, 0x61, 0x72, 0x74, 0x41, 0x62, 0x61,
	0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x22, 0xb8, 0x06, 0x0a, 0x0a, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x15,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e,
	0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x3a, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x37, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x48, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x37, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x67, 0x48, 0x00, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x3a,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x43, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x43, 0x61, 0x72, 0x74, 0x12, 0x43, 0x0a, 0x0e, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x61, 0x72,
	0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x61,
	0x72, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x0e, 0x63,
	0x61, 0x72, 0x74, 0x5f, 0x61, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d, 0x61, 0x73,
	0x73, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x74, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x65, 0x64,
	0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e,
	0x6d, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x48, 0x00, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12,
	0x3b, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2e, 0x6d,
	0x61, 0x73, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00,
	0x52, 0x0a, 0x6e, 0x65, 0x77, 0x4b, 0x65, 0x79, 0x43, 0x61, 0x72, 0x64, 0x42, 0x07, 0x0a, 0x05,
	0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_store_events_proto_rawDescOnce sync.Once
	file_store_events_proto_rawDescData = file_store_events_proto_rawDesc
)

func file_store_events_proto_rawDescGZIP() []byte {
	file_store_events_proto_rawDescOnce.Do(func() {
		file_store_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_store_events_proto_rawDescData)
	})
	return file_store_events_proto_rawDescData
}

var file_store_events_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_store_events_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_store_events_proto_goTypes = []interface{}{
	(UpdateStoreManifest_ManifestField)(0), // 0: market.mass.UpdateStoreManifest.ManifestField
	(UpdateItem_ItemField)(0),              // 1: market.mass.UpdateItem.ItemField
	(UpdateTag_TagAction)(0),               // 2: market.mass.UpdateTag.TagAction
	(*StoreManifest)(nil),                  // 3: market.mass.StoreManifest
	(*UpdateStoreManifest)(nil),            // 4: market.mass.UpdateStoreManifest
	(*CreateItem)(nil),                     // 5: market.mass.CreateItem
	(*UpdateItem)(nil),                     // 6: market.mass.UpdateItem
	(*CreateTag)(nil),                      // 7: market.mass.CreateTag
	(*UpdateTag)(nil),                      // 8: market.mass.UpdateTag
	(*ChangeStock)(nil),                    // 9: market.mass.ChangeStock
	(*NewKeyCard)(nil),                     // 10: market.mass.NewKeyCard
	(*CreateCart)(nil),                     // 11: market.mass.CreateCart
	(*ChangeCart)(nil),                     // 12: market.mass.ChangeCart
	(*CartFinalized)(nil),                  // 13: market.mass.CartFinalized
	(*CartAbandoned)(nil),                  // 14: market.mass.CartAbandoned
	(*StoreEvent)(nil),                     // 15: market.mass.StoreEvent
}
var file_store_events_proto_depIdxs = []int32{
	0,  // 0: market.mass.UpdateStoreManifest.field:type_name -> market.mass.UpdateStoreManifest.ManifestField
	1,  // 1: market.mass.UpdateItem.field:type_name -> market.mass.UpdateItem.ItemField
	2,  // 2: market.mass.UpdateTag.action:type_name -> market.mass.UpdateTag.TagAction
	3,  // 3: market.mass.StoreEvent.store_manifest:type_name -> market.mass.StoreManifest
	4,  // 4: market.mass.StoreEvent.update_store_manifest:type_name -> market.mass.UpdateStoreManifest
	5,  // 5: market.mass.StoreEvent.create_item:type_name -> market.mass.CreateItem
	6,  // 6: market.mass.StoreEvent.update_item:type_name -> market.mass.UpdateItem
	7,  // 7: market.mass.StoreEvent.create_tag:type_name -> market.mass.CreateTag
	8,  // 8: market.mass.StoreEvent.update_tag:type_name -> market.mass.UpdateTag
	11, // 9: market.mass.StoreEvent.create_cart:type_name -> market.mass.CreateCart
	12, // 10: market.mass.StoreEvent.change_cart:type_name -> market.mass.ChangeCart
	13, // 11: market.mass.StoreEvent.cart_finalized:type_name -> market.mass.CartFinalized
	14, // 12: market.mass.StoreEvent.cart_abandoned:type_name -> market.mass.CartAbandoned
	9,  // 13: market.mass.StoreEvent.change_stock:type_name -> market.mass.ChangeStock
	10, // 14: market.mass.StoreEvent.new_key_card:type_name -> market.mass.NewKeyCard
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_store_events_proto_init() }
func file_store_events_proto_init() {
	if File_store_events_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_store_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoreManifest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeStock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewKeyCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeCart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartFinalized); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_events_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartAbandoned); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_events_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_store_events_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*UpdateStoreManifest_String_)(nil),
		(*UpdateStoreManifest_TagId)(nil),
		(*UpdateStoreManifest_Erc20Addr)(nil),
	}
	file_store_events_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*UpdateItem_Price)(nil),
		(*UpdateItem_Metadata)(nil),
	}
	file_store_events_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*UpdateTag_ItemId)(nil),
		(*UpdateTag_NewName)(nil),
		(*UpdateTag_Delete)(nil),
	}
	file_store_events_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*StoreEvent_StoreManifest)(nil),
		(*StoreEvent_UpdateStoreManifest)(nil),
		(*StoreEvent_CreateItem)(nil),
		(*StoreEvent_UpdateItem)(nil),
		(*StoreEvent_CreateTag)(nil),
		(*StoreEvent_UpdateTag)(nil),
		(*StoreEvent_CreateCart)(nil),
		(*StoreEvent_ChangeCart)(nil),
		(*StoreEvent_CartFinalized)(nil),
		(*StoreEvent_CartAbandoned)(nil),
		(*StoreEvent_ChangeStock)(nil),
		(*StoreEvent_NewKeyCard)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_store_events_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_store_events_proto_goTypes,
		DependencyIndexes: file_store_events_proto_depIdxs,
		EnumInfos:         file_store_events_proto_enumTypes,
		MessageInfos:      file_store_events_proto_msgTypes,
	}.Build()
	File_store_events_proto = out.File
	file_store_events_proto_rawDesc = nil
	file_store_events_proto_goTypes = nil
	file_store_events_proto_depIdxs = nil
}
